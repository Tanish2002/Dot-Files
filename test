#!/bin/sh

die() {
    echo "$1" >&2
    exit 1
}

confirm() {
    clear
    while true; do
        printf "\n$* Do you want to continue [y/n]\n"
        read -r yn
        case $yn in
            [Yy]*) return 0  ;;  
            [Nn]*) printf "\nAborted\n" ; die ;;
        esac
    done
}

checkdep() {
    clear
    printf "If you are on Void Linux the script can install dependencies for you\nDo you want to install the dependencies? [y/n]\n" 
    read -r yn
    case $yn in
        [Yy]*)
            clear
            distro=$(lsb_release -sd)
            distro=${distro##[\"\']}
	    distro=${distro%%[\"\']}
            case "${distro}" in 
                    "Void Linux")
                        printf "Installing all the dependencies for Void Linux:\n"
                        sudo xbps-install -Svu;
                        sudo xbps-install -S zsh make libXft curl nodejs gcc pkg-config \
                             libX11-devel libXft-devel libXinerama-devel picom polybar \
                             dunst bc rofi mpv maim youtube-dl xprop stow ranger nerd-fonts-ttf \
                             nerd-fonts-otf pywal xrdb feh git bspwm 
                        ;;
                    "Arch Linux")
                        printf "Installing all the dependencies for Arch Linux:\n"
                        sudo pacman -Syu ;
                        sudo pacman -S zsh make libxft curl nodejs gcc pkgconf \
                             libX11 libxinerama picom dunst bc rofi mpv maim \
                             mpv youtube-dl xorg-xprop stow ranger python-pywal \
                             xorg-xrdb feh git bspwm
                        git clone https://aur.archlinux.org/yay.git
                        cd yay
                        makepkg -si
                        cd ..
                        rm -rf yay
                        yay -S polybar nerd-fonts-complete
                        ;;
                    *)
                        printf "\nError: The script doesn't support your distro\n"
            esac

            sudo chsh -s $(which zsh) 
            sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
            rm $HOME/.zshrc
            curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \
                    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
            ;;
        [Nn]*)
            clear
            printf "A file named dependencies is in the repo check it for all the dependencies.txt"
            printf "\nHave you installed all the dependencies manually? [y/n]"
            read -r x
            case $x in
                [Yy]*) return 0 ;;
                [Nn]*) printf "Aborted\n" ; die ;;
            esac
            ;;
    esac
}

settheme() {
    xrdb -remove
    xrdb "$HOME"/xrdb/"$1"/"$1" 
    feh --bg-fill "$HOME"/Wallpapers/"$1".*
    
}

stoww() {
    cd ${pwd}
    stow Wallpapers -t "$HOME"
    stow xrdb -t "$HOME"
    stow bin -t "$HOME"
}

unstow() {
    cd ${pwd}
    stow -D Wallpapers
    stow -D xrdb
    stow -D bin
    stow -D Bspwm:lake
    stow -D Bspwm:forest
    stow -D Bspwm:pywal
    stow -D Dwm:girl
}

suckless() {
    pwd=$(pwd)
    clear
    printf "\n Do you want to install my Suckless Programs? [dwm, st, tabbed, All]\n"
    printf "Type 'exit' if you don't want my Suckless Programs\n"
    printf "\n Type the programs one at a time\n"
    read -r answer 
    while [ "$answer" != "exit" ]; do
        case $answer in
            dwm | st | tabbed)
                [ "$answer" = "st" ] && st="true"
                [ "$answer" = "tabbed" ] && tabbed="true"
                cd $HOME
                git clone https://gitlab.com/Tanish2002/$answer-tanish2002
                cd $answer-tanish2002
                sudo make clean install
                [ "$answer" = "dwm" ] && sudo cp dwm.desktop /usr/share/xsessions/
                clear
                printf "\n Next Program? [dwm ,st ,tabbed]\n"
                printf "\n Type:'exit' when you have installed the programs you need\n"
                read -r answer 
                ;;
            ALL)
                cd $HOME
                git clone https://gitlab/Tanish2002/dwm-tanish2002
                git clone https://gitlab/Tanish2002/st-tanish2002
                git clone https://gitlab/Tanish2002/tabbed-tanish2002
                cd dwm-tanish2002 && sudo make install && sudo cp dwm.desktop /usr/share/xsessions/ && cd .. 
                cd st-tanish2002 && sudo make install && cd ..
                cd tabbed-tanish2002 && sudo make install && cd ..
                st="true" && tabbed="true"
                break
                ;;
            *)
                printf "\nI don't have suckless program with that name :)\n" 
                printf "Do you want to retry?[y/n]" 
                read -r yn 
                case $yn in
                    [Yy]*)suckless ;;
                    [Nn]*)return 0 ;; 
                esac
        esac
    done
}

livereload(){
    [ "$tabbed" = "true" ] && $HOME/bin/stmessage tabbed
    [ "$st" = "true" ] && $HOME/bin/stmessage st
    [ "$1" = "lake" ] || [ "$1" = "forest" ] || [ "$1" = "pywal" ] && $HOME/.config/bspwm/bspwmrc
    [ "$1" = "girl" ] && $HOME/bin/autostart
}





case $1 in
    lake) confirm && checkdep && suckless && unstow && stoww && settheme "$1" && $(stow Bspwm:lake -t "$HOME" || die);; 
    forest) confirm && checkdep && suckless && unstow && stoww && settheme "$1" && $(stow Bspwm:forest -t "$HOME") || die;;
    girl) confirm && checkdep && suckless && unstow && stoww && settheme "$1" && $(stow Dwm:girl -t "$HOME") ||die;;
    pywal) confirm && checkdep && suckless && unstow && stoww && settheme && "$1" && $(stow Bspwm:pywal -t "$HOME") || die;;
    *)
        die "usage : ${0##*/} <lake|forest|girl|pywal>"
esac
livereload "$1"
sleep 1
clear
printf "\nDONE :)\n"
