mv .zshrc .zshrc1
mv .zshrc.pre-oh-my-zsh .zshrc
nvim .xinitrc
which dwm
startx "/usr/local/bin/dwm"
xi firefox
xrdb
stmessage
ls /var/service
xrs connman
xi connman connman-gtk
nvim /etc/sudoers
sudo nvim /etc/sudoers
sudo xbps-install -S
sudo rm /var/service/dhcpcd
sudo ln -s /etc/sv/connmand /var/service 
connman
xrs dbus
ls /etc/sv/dbus
ls /var/service/dbus
sudo ln -s /etc/sv/dbus /var/service 
connmanctl
git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k
ls bin/autostart
groups
xi pulseaudio alsa-plugins-pulseaudio
xrs pavucontrol
xi pavucontrol
xi alsa-utils
alsamixer
ls /etc/asound
ls /etc/asound*
ls /etc/asound.conf
cat /etc/asound.conf
cp /etc/asound.conf asound.conf
alsactl
alsactl --help
sudo ln -s /etc/sv/alsa /var/service 
sudo sv restart alsa
start-pulseaudio-x11
amixer --help
kak dwm-tanish2002/config.h
amixer sset Master toggle
kak dot-files/StartupPage/README.md
kak /usr/lib/firefox/browser/defaults/preferences/enable-autoconfig.js
sudo kak /usr/lib/firefox/browser/defaults/preferences/enable-autoconfig.js
sudo nvim /usr/lib/firefox/browser/defaults/preferences/enable-autoconfig.js
sudo nvim /usr/lib/firefox/autoconfig.cfg
cd dot-files/StartupPage/
xi emacs-x11
cleaner
xi go
mkdir -p .config/lf
kak .config/lf/cleaner
kak .config/lf/previewer
chmod +x .config/lf/previewer
chmod +x .config/lf/cleaner
kak bin/startlf
rm bin/startlf
git clone https://github.com/gokcehan/lf.git
go get -u github.com/gokcehan/lf
cd gen
lfp
ls ~/.config
git clone https://github.com/seebye/ueberzug.git
ks
./setup.py
./setup.pyw --help
xrs python
xi python3-devel
./setup.py build
cd .
./ueberzug
./setup.py --help
sudo ./setup.py build
./lfp
cd .cache
rm lf
rm -rf lf
rm /usr/bin/ueberzug
sudo rm /usr/bin/ueberzug
xrs unzip
xi unzip
ls Downloads
ls Downloads/ueberzug-18.1.4.zip
cd ueberzug
./setup.py install
sudo ./setup.py install
rm .cache/lf
rm .cache/lf/*
xrs libressl
xi libressl-devel
xpkg
xpkg | wc -l
xrs htop
xrs top
xi htop
xrs iso-code
xi iso-codes
xi void-repo-nonfree
xrs discord
mkdir screenshots
xrs file
xrs file | grep roller
xi file-roller
mkdir /usr/share/pixmaps
sudo cp discord.png /usr/share/pixmaps
sudo cp discord.desktop /usr/share/applications
sudo mkdir /usr/lib/discord
sudo kak /usr/share/applications/discord.desktop
kak srcpkgs/discord/patches/discord.desktop.patch
xrs pip
xi python3-pip
sudo python3 -m pip install -U https://github.com/leovoel/BeautifulDiscord/archive/master.zip\

beautifuldiscord --css
ls /usr/share/licenses
mkdir /usr/share/licenses/discord
sudo mkdir /usr/share/licenses/discord
cd files
sudo mv LICENSE /usr/share/licenses/discord
sudo cp /usr/share/licenses/discord/LICENSE ./
./chrome-sandbox
beautifuldiscord --revert
sudo killall Discord
./Discord
xi alsa-lib dbus-glib gtk+3 GConf libnotify nss libXtst libcxx libatomic
beautifuldiscord --css dot-files/StartupPage/Discord.css
beautifuldiscord --css ~/dot-files/StartupPage/Discord.css
rm Discord
rm -rf Discord
rm -rf go
sudo rm -rf go
sudo rm -rf lf
sudo rm -rf lfp
sudo rm -rf ueberzug ueberzug-18.1.4 
du -sh void-packages
sudo hwclock =w
ntp
hwclock --help
hwclock -r
xrs ntp
sudo tzslec
sudo date --set="15:18:50"
hwclock
xr -R ntp
xrs timedatectl
xrs time
sudo hwclock --debug
sudo hwclock --help
ls /usr/share/zoneinfo
ls /usr/share/zoneinfo/Asia/Kolkata
cat /usr/share/zoneinfo/Asia/Kolkata
ln -sf /usr/share/zoneinfo/Asia/Kolkata /etc/localtime
cat /etc/localtime
readlink /etc/localtime
sudo ln -sf /usr/share/zoneinfo/Asia/Kolkata /etc/localtime
sudo hwclock -s
sudo hwclock -s --utc
sudo hwclock
sudo kak /etc/rc.conf
sudo hwclock -w
xi ntp
xrs chrony
xi chrony
ls /etc/sv/
sudo ln -s /etc/sv/chronyd /var/service 
chronyd
sudo chronyd
sudo hwclock -v
xrs xdg
xi xdg-utils
curl https://sh.rustup.rs -sSf | sh
ldd --version
sudo kak .zprofile
sudo kak .bash_profile
ls .cargo/bin
cargo
rustup toolchain install nightly
cargo +nightly install racer
rustup component add rustfmt-preview
rustup component add rust-src
curl -L https://github.com/rust-analyzer/rust-analyzer/releases/latest/download/rust-analyzer-linux -o ~/.local/bin/rust-analyzer
xrs rust
pip install â€ƒ¸python-language-server[all]
sudo pip install â€ƒ¸python-language-server[all]
sudo pip install python-language-server[all]
sudo pip install "python-language-server[all]"
xrs ccls
xi ccls
xi xdo
git clone https://github.com/salman-abedin/devour.git && cd devour && sudo make install
rm -rf devour
git clone https://github.com/instantOS/instantWM.git
cd instantWM
kak startinstantos
xinit instantos
xinit instantwm
mkdir ~/.local/bin
mv ~/Downloads/rust-analyzer-linux\(1\) ~/.local/bin/
mv .local/bin/rust-analyzer-linux\(1\) .local/bin/rust-analyzer
chmod +x ~/.local/bin/rust-analyzer
mkdir clones
cd void-packages/srcpkgs/lf/
xrs clib
xrs xauth
ssh-keygen -t ed25519 -C "gitlab"
xclip -selection clipboard < ~/.ssh/id_ed25519.pub
curl -fLo ~/.vim/autoload/plug.vim --create-dirs \\
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
rm -rf .vim
rm -rf ~/.vim
sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \\
       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
mkdir ~/.config/ssh
cp /home/weeb/.ssh/id_ed25519 ~/.config/ssh
cp /home/weeb/.ssh/id_ed25519.pub ~/.config/ssh
ssh -i /home/weeb/.config/ssh/key
ssh -i /home/weeb/.config/ssh/key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no
rm  -rf .ssh
git diff-files
ls -A .config
rm -rf dot-files
git clone git@gitlab.com:Tanish2002/dot-files.git
nvim
git clone git@gitlab.com:Tanish2002/st-tanish2002.git
git clone git@gitlab.com:Tanish2002/tabbed-tanish2002.git
rm -rf dwm-tanish2002 st-tanish2002 tabbed-tanish2002 
ls .config/
git clone https://github.com/andreyorst/plug.kak.git ~/.config/kak/plugins/plug.kak
cat /etc/sv/ntpd/run
cat /etc/sv/ntpd/supervise
sudo cat /etc/sv/ntpd/supervise
sudo ls /etc/sv/ntpd/supervise
id -Gn "$USER"
id -Gn "$USER" | tr ' ' ':'
sudo mkdir /etc/sv/emacs-daemon
sudo mkdir /etc/sv/emacs-daemon/log
sudo nvim /etc/sv/emacs-daemon/log/run
xrs rsyslog
xi rsyslog
chpst
exec chpst -u weeb:weeb /usr/bin/emacs --fg-daemon=hristos-emacsd 2>&1
chpst -u weeb:weeb /usr/bin/emacs --fg-daemon=hristos-emacsd 2>&1
sudo chpst -u weeb:weeb /usr/bin/emacs --fg-daemon=hristos-emacsd 2>&1
ls /etc/sv
ls /etc/sv/emacs-daemon
rm -rf /var/service/emacs-daemon
sudo rm -rf /etc/sv/emacs-daemon
sudo mkdir /etc/sv/emacs-daemon/
man emacs
sudo nvim /var/service/emacs-daemon/run
sudo htop
kak /etc/sv/alsa/run
kak /etc/sv/chronyd/run
ls -l
ls -l /etc/sv/chronyd/run
sudo chmod 755 /etc/sv/emacs-daemon/run
ls -l /etc/sv/emacs-daemon/run
ls -l /etc/sv/emacs-daemon/supervise
ls -l /etc/sv/chronyd/supervise
zshr
sv status emacs-daemon
xrs kak-lsp
xi kak-lsp
killall emacs-daemon
kak bin/autostart
devour kak asound.conf
devour firefox
xdo id
$SHELL
echo $SHELL
xdo hide emacs
killall /bin/zsh
killall tabbed
killall kak-lsp
devour feh screenshots/2020-07-17_21:50:56.png
xdo
xdo --help
man xdo
man zsh
sudo kak /usr/local/bin/devour
sudo bash -c "nvim /usr/local/bin/devour"
devour emacs
kak /usr/local/bin/devour
sudo mv /usr/local/bin/devour ~/bin
sudo sh
devour emacsclient --socket-name=emacsd -c -n
devour "emacsclient --socket-name=emacsd -c -n"
sudo sv down emacs-daemon
emacsclient --socket-name=emacsd -c -n
devour 'emacsclient --socket-name=emacsd -c -n'
sudo killall emacs
sudo devour "emacsclient -c"
emacs --daemon
emacsclient -c -n
devour 'emacsclient -c -n'
bash -c "emacs --daemon"
bash -c "emacsclient -c"
bash -c "devour 'emacsclient -c'"
kak bin/devour1
kak bin/devour
chmod +x bin/devour1
sudo rm bin/devour
mv bin/devour1 bin/devour
devour
devour 'emacsclient -c '
where devour
emacsd
kak .xinitrc
git clone git@gitlab.com:Tanish2002/Python.git
echo $GIT_SSH_COMMAND
ssh -i /home/tanish2002/.config/ssh/key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no
git clone git@gitlab.com:Tanish2002/dwm-tanish2002.git
ls .config/ssh/
git clone git@gitlab.com:Tanish2002/python.git
cd python
ee ./
kak bin/moe
kak .cache/rofi.pid
kak .cache/rofi3.druncache
sudo nvim /etc/sv/emacs-daemon/run
devour 'emacsclient --socket-name=weeb-emacsd -c -n'
kak bin/devour 
cat /etc/sv/emacs-daemon/run
emacsclient --socket-name=weeb-emacsd -c -n
devour "emacsclient --socket-name=weeb-emacsd -c -n"
devour emacsclient -c -n
emacsclient --help
emacs --daemon=weeb-emacsd 2>&1
devour "emacsclient --socket-name=weeb-emacsd -c"
emacs --daemon 2>&1
emacsclient -c
devour "emacsclient -c"
devour 'emacsclient -c'
devour emacsclient -c
devour emacsclient --socket-name=weeb-emacsd -c -n
devour emacsclient --socket-name=weeb-emacsd -c
curl -s https://termbin.com/fpre
kak srcpkgs/iso-codes
cd srcpkgs/iso-codes
cd srcpkgs/discord
sudo rm -rf /usr/share/licenses/discord
tar xvzf Downloads/discord-0.0.10\(1\).tar.gz
./xbps-src bootstrap
./xbps-src
synclient
cat /etc/conf
cat etc/conf
/xbps-src pkg discord
sudo xbps-install discord
sudo xbps-install -S discord
cd clom
ls Discord
cd Discord
cat postinst.sh
sudo ranger
sudo ln -sfr /usr/lib/discord/Discord /usr/bin/Discord
feh ~/screenshots/2020-07-19_20:34:43.png
feh ~/screenshots/2020-07-19_21:15:47.png
xbps-query
xbps-query -l
xbps-query -l | grep discord
cd clones/void-packages
git clone https://github.com/Tanish2002/void-packages.git
killall record
kak bin/record
echo $PWD
git clone --depth=1 https://github.com/Tanish2002/void-packages.git
xrs ffmpeg
xi ffmpeg
mpv record-2020.07.20-00:43:25.mp4
moe record-2020.07.20-00:43:25.mp4
xpkg | grep "alsa-lib"
git
git pull upstream master
git rebase upstream/master\

git remote add upstream https://github.com/void-linux/void-packages.git
git remote -v
git fetch upstream
git merge upstream/master master
git rebase upstream/maste
kak srcpkgs/iso-codes/template
cat srcpkgs/iso-codes/template
git rebase upstream/master
git shwo
git show
sudo xbps-install --repository /home/weeb/clones/void-packages/hostdir/binpkgs/nonfree discord
git commit
git commit -m "ree"
xr -R discord
re
cd clones/instantWM
curl -s https://termbin.com/vl86
moe bin/lfrun
moe .config/lf/previewer
moe .config/lf/cleaner
cat .config/lf/lfrc
xrs xlib
cat void-packages/srcpkgs/lf/template
xrs termbox
xrs tcell
xlib
kak .config/lf/lfrc
mv .config/lf/lfrc .config/lf/lfrc1
mv .config/lf/lfrc1 .config/lf/lfrc
where lf
sudo mv /usr/local/bin/lf /usr/local/bin/lf1
xrs lf
xi lf
cat .config/lf/lfrc | xclip -sel clip
cat bin/lfrun | xclip -sel clip
kak bin/lfrun
function check_cache {\
    if [ ! -d "$HOME/.cache/lf" ]; then\
	mkdir -p "$HOME/.cache/lf"\
    fi\
}\

check_cache
function start_ueberzug {\
    mkfifo "${UEBERZUG_FIFO}"\
    <"${UEBERZUG_FIFO}" ueberzug layer --parser bash --silent &\
    3> "${UEBERZUG_FIFO}" exec\
}\
\

function remove_temp {\
    rm "${UEBERZUG_FIFO}"\
    rm -r "${PREVIEW_TMP}"\
}\

declare -r -x TEXT_WIDTH=7\
declare -r -x TEXT_HEIGHT=14\
declare -r -x UEBERZUG_FIFO="$(mktemp --dry-run --suffix "lf-$$-ueberzug")"\
declare -r -x PREVIEW_TMP="$(mktemp -d --suffix "lf-$$-ueberzug")"\

start_ueberzug
kak void-packages/srcpkgs/ueberzug
kak void-packages/srcpkgs/ueberzug/template 
python3-xlib python3-pillow-simd python3-docopt python3-psutil python3-attrs
xr -R lf
sudo mv /usr/local/bin/lf1 /usr/local/bin/lf
xi python3-xlib python3-pillow-simd python3-docopt python3-psutil python3-attrs
git clone https://gitlab.com/Provessor/lfp.git
ls gen
gen/docstring.sh
gen/man.sh
gen/xbuild.sh
kak gen/xbuild.sh
git clone https://github.com/Provessor/lf.git
cd lf
sudo mv lf /usr/local/bin/lf
where ueberzug
ls clones
sudo python3 -m pip uninstall
python3 -m pip uninstall ueberzug
xi ueberzug
sudo python3 -m pip install ueberzug
ueberzug
cd lfp
gen/build.sh
sudo mv lfp /usr/local/bin/lf
kak ~/.config/lf/lfrc
xrs python-xlib
xi python-xlib
cat .Xauthority
rm .Xauthority
xr -R ueberzug
unzip Downloads/ueberzug-18.1.4.zip
cd ueberzug-18.1.4
kak ueberzug/xutil.py
sudo python3 -m pip uninstall ueberzug
sudo python3 setup.py
sudo python3 setup.py --help 
sudo python3 setup.py install
man xauth
cat .zcompdump
cat .zcompdump-anime-5.8
ls -Al
fc-list
fc-list | grep -i "mononoki"
mkdir Documents
mkdir Documents/org
ls ~/xrdb
rm -rf ~/xrdb
mv ~/.doom.d common
ls common
git config --global user.email "tanishkhare@gmail.com"
git config --global user.name "Tanish2002"
git commit -m "Added Doom Emacs config"
mv common/.doom.d/config.org common/.doom.d/README.org
ls common/.doom.d
rm .doom.d/config.org
mv common/.doom.d/README.org common/.doom.d/config.org
ln -s common/.doom.d/config.org common/.doom.d/README.org
cd common/.doom.d
rm README.org
ln -s config.org README.org
ls -All common/.doom.d
ls -All
git commit -m "Added Readme for Doom Emacs config"
moe .doom.d/config.el
mpv record-2020.07.20-02:48:32.mp4
mpv record-2020.07.20-17:25:38.mp4
bash -c "vim .doom.d/config.el\
"
git clone https://github.com/elkowar/Termibbl.git
xrs rls
rustup component add rls rust-analysis rust-src
cd clones/Termibbl
ls target
ls target/rls
ls target/debug
kak bin/screenshot-menu.sh
xrs xdo
xi xdotool
beautifuldiscord --css akame.css
xrs mpdf
xrs mupdf
xi mupdg
xi mupdf
kak akame.css
color block
color block #232323
color block 232323
color block 1e1e1e
color block 1f1f1f
go
curl -s https://qwerasd205.github.io/HLJSNames.theme.css
kak akame.css 
cp dot-files/StartupPage/Discord.css dicord.css
kak dicord.css
beautifuldiscord --css Discord
beautifuldiscord --css dicord.css
curl -s https://qwerasd205.github.io/HLJSNames.theme.css > hljs.css
beautifuldiscord --css hljs.css
kak clones/python/casting.py
unzip  Downloads/BetterDiscordApp-1.0.0.zip
cd BetterDiscordApp-1.0.0
rm -rf BetterDiscordApp-1.0.0
curl -O https://raw.githubusercontent.com/bb010g/betterdiscordctl/master/betterdiscordctl
chmod +x betterdiscordctl
sudo mv betterdiscordctl /usr/local/bin
betterdiscordctl install
where Discord
readlink /usr/bin/Discord
ls /usr/lib/discord/
betterdiscordctl uninstall
kak /usr/local/bin/betterdiscordctl
sudo rm -rf /usr/local/bin/betterdiscordctl
echo -n "LongString"
echo -n "LongString" | gzip -c
echo -n "LongString" | gzip -fc
echo -n "LongString" | gzip -c | tail -c8
echo -n "LongString" | gzip -c | tail -c8 | hexdump -n4 -e '"%u"'
kak clones/st-tanish2002/config1.h
kak config2.h
kak config1.h
mv config1.h config.h
rm config2.h
rm README.md
git commit -m "Added Readme.org"
ls /swapfile
ls/
swapon
chmod 600 /swapfile
sudo dd if=/dev/zero of=/swapfile bs=8192 count=1048576
sudo
xrs swapon
sudo swapoff /swapfile
sudo fallocate -l 8G /swapfile
sudo swapon
sudo fallocate -l 1G /swapfile
sudo rm -rf /swapfile
sudo fallocate -l 1G /mnt/swapfile
sudo fallocate -l 8G /mnt/swapfile
sudo chmod 600 /mnt/swapfile
sudo mkswap /mnt/swapfile
sudo swapon /mnt/swapfile
swapon --help
sudo rm -rf /mnt/swapfile
sudo dd if=/dev/zero of=/swapfile bs=1024 count=8388608
ls -All /
sudo chmod 600 /swapfile
sudo mkswap /swapfile
sudo swapon /swapfile
sudo nvim /etc/fstab
free -h
cat /proc/swaps
sudo nvim /etc/sysctl.conf
swapon --show
echo -e -n "\x1b[\x32 q" # changes to steady bar\

echo -e -n "\x1b[\x31 q" # changes to steady bar\

echo -e -n "\x1b[\x38 q" # changes to steady bar\

echo -e -n "\x1b[\x35 q" # changes to steady bar\

echo -e -n "\x1b[\x34 q" # changes to steady bar\

echo -e -n "\x1b[\x30 q" # changes to steady bar\

echo -e -n "\x1b[\x42 q" # changes to steady bar\

echo -e -n "\x1b[\x12 q" # changes to steady bar\

echo -e -n "\x1b[\x22 q" # changes to steady bar\

echo -e -n "\x1b[\x36 q" # changes to steady bar\

zshrc
kak dot-files/WIP/test
mpv record-2020.07.20-23:55:28.mp4
mpv record-2020.07.21-18:24:23.mp4
rm record-2020.07.21-19:21:49.mp4
mpv record-2020.07.21-19:22:17.mp4
rm .doom.d/config.el
kak clones/Termibbl/src/main.rs
kak .doom.d/packages.el 
bin/picom_anim
git clone https://github.com/phisch/picom.git
git clone https://github.com/phisch/compton.git
rm -rf giph
git clone https://github.com/phisch/picom
xr -R picom
xi libconfig
git clone https://github.com/jonaburg/picom.git
xi meson ninja
cd void-packages/srcpkgs/picom
xi MesaLib-devel dbus-devel libconfig-devel libev-devel pcre-devel\
 pixman-devel xcb-util-image-devel xcb-util-renderutil-devel\
 libxdg-basedir-devel uthash
xi MesaLib-devel libconfig-devel libev-devel pcre-devel pixman-devel xcb-util-image-devel xcb-util-renderutil-devel libxdg-basedir-devel uthash
cd build
cd bin
./picom-trans
./picom-trans --experimental-backend
./picom-trans --help
./picom-trans -help
mpv record-2020.07.22-18:44:22.mp4
sudo rm -rf /usr/local/bin/picom
ninja -C build install --no-rebuild
kak clones
rust-analyzer
kakrc
kak .config/kak/kakrc
killall discord
xrs cpugreq
xrs cpufreq
xi cpufrequtils 
performance_mode
git reset
git reset HEAD
git reset HEAD~
git reset origin/master
git reset origin/master --hard
kak .config/kak-lsp/kak-lsp.toml 
pgrep emacs
killall rust-analyzer
kak src/main.rs
pgrep rust-analyzer
cd .doom.d
mkdir themes
cd themes
wget
xrs wget
xi wget
wget https://raw.githubusercontent.com/hlissner/emacs-doom-themes/master/themes/doom-solarized-dark-theme.el
mv doom-{solarized,selenized}-dark-theme.el
sed -i 's/solarized/selenized/g' doom-selenized-dark-theme.el
kak doom-selenized-dark-theme.el
kak .config/nvim/init.vim
git clone https://gitlab.com/valtrok/doom-theme-generator.git
cat ~/xrdb/solid/solid | xclip -sel clip
kak solid.json
python doom-theme-generator.py solid.json solid
sudo pip install jinja2 chroma
pip uninstall jinja2 chroma
mv solid.json solid.txt
python3 doom-theme-generator.py solid.json solid
xrs python2
sudo python2 doom-theme-generator.py solid.txt solid
sudo pip uninstall jinja2 chroma
pip install jinja2 chroma
jinja
xrs python2-pip
xrs python pip
xrs python | grep "pip"
xi python-pip
python2 -m pip install jinja2 chroma
python2 doom-theme-generator.py solid.txt solid
cp doom-solid-theme.el ~/.doom.d/themes
kak .doom.d/themes/doom-solid-theme.el
cat ~/xrdb/lake/lake | xclip -sel clip
cd do
kak lake.txt
python2 doom-theme-generator.py lake.txt lake
cp doom-lake-theme.el ~/.doom.d/themes
xrdb xrdb/lake/lake
cd clones/Termibbl/
kak src/data.rs
kak nord.txt
python2 doom-theme-generator.py nord.txt nord
cp doom-nord-theme.el ~/.doom.d/themes
mv doom-nord-theme.el doom-nord1-theme.el
mv nord.txt custom.txt
kak custom.txt
python2 doom-theme-generator.py custom.txt custom.txt
cp doom-custom.txt-theme.el ~/.doom.d/themes
python2 doom-theme-generator.py custom.txt custom
cp doom-custom-theme.el ~/.doom.d/themes
rm doom-custom.txt-theme.el
rm ~/.doom.d/themes/doom-custom.txt-theme.el
kak solid.txt
cd doom-theme-generator
kak doom-nord1-theme.el
kak doom-nord-theme.el 
git clone https://github.com/ym1234/colorpicker.git
cd colorpicker
color block 21242b
color block 282c34
color block 101411
sleep 2 && colorpick
sleep 2 && maim photo.png
feh photo.png
color block 0E120F
cd Termibbl/
rm src/.main.rs.kak.tJzsId
git clone https://github.com/phisch/giph.git
xrs awesome
cd void-packages/srcpkgs/awesome
xi awesome
ls /var/service/
git clone https://github.com/fontello/typicons.font.git
cd typicons.font
make font
make all
mak
make dependencies
dc
rm -rf typicons.font
git clone https://github.com/elenapan/dotfiles
cd dotfiles
[ -e ~/.config/awesome ] && mv ~/.config/awesome ~/.config/awesome-backup-"$(date +%Y.%m.%d-%H.%M.%S)" # Backup current configuration
cp -r config/awesome ~/.config/awesome
cd .config/awesome
kak rc.lua
kak dotfiles/.xfiles/amarena
xrdb xrdb/solid/solid 
xrdb dotfiles/.xfiles/amarena
cd .doom.d/themes
kak doom-custom-theme.el
kak doom-solid-theme.el
kak doom-xres-theme.el
kak .config/awesome/apps.lua
xi jq
\
  country="]]..country..[["\
\
  stats=$(curl "https://corona-stats.online/$country?format=json" 2>/dev/null)\
\
  cases_total="$(echo $stats | jq ".data[0].cases")"\
  cases_today="$(echo $stats | jq ".data[0].todayCases")"\
  deaths_total="$(echo $stats | jq ".data[0].deaths")"\
  deaths_today="$(echo $stats | jq ".data[0].todayDeaths")"\
\
  echo CTOTAL@$cases_total@CTODAY@$cases_today@DTOTAL@$deaths_total@DTODAY@$deaths_today@
echo $cases_today
echo $cases_total
htp
kak xrdb/girl/girl
kak 
colrpanes
fc-list | grep -i "Fura"
rm -rf .local/share/fonts/mplus-1c-black.otf .local/share/fonts/mplus-1c-bold.otf .local/share/fonts/mplus-1c-heavy.otf .local/share/fonts/mplus-1c-light.otf .local/share/fonts/mplus-1c-medium.otf .local/share/fonts/mplus-1c-regular.otf .local/share/fonts/mplus-1c-thin.otf .local/share/fonts/mplus-1m-bold.otf .local/share/fonts/mplus-1m-light.otf .local/share/fonts/mplus-1m-medium.otf .local/share/fonts/mplus-1m-regular.otf .local/share/fonts/mplus-1m-thin.otf .local/share/fonts/mplus-1mn-bold.otf .local/share/fonts/mplus-1mn-light.otf .local/share/fonts/mplus-1mn-medium.otf .local/share/fonts/mplus-1mn-regular.otf .local/share/fonts/mplus-1mn-thin.otf .local/share/fonts/mplus-1p-black.otf .local/share/fonts/mplus-1p-bold.otf .local/share/fonts/mplus-1p-heavy.otf .local/share/fonts/mplus-1p-light.otf .local/share/fonts/mplus-1p-medium.otf .local/share/fonts/mplus-1p-regular.otf .local/share/fonts/mplus-1p-thin.otf .local/share/fonts/mplus-2c-black.otf .local/share/fonts/mplus-2c-bold.otf .local/share/fonts/mplus-2c-heavy.otf .local/share/fonts/mplus-2c-light.otf .local/share/fonts/mplus-2c-medium.otf .local/share/fonts/mplus-2c-regular.otf .local/share/fonts/mplus-2c-thin.otf .local/share/fonts/mplus-2m-bold.otf .local/share/fonts/mplus-2m-light.otf .local/share/fonts/mplus-2m-medium.otf .local/share/fonts/mplus-2m-regular.otf .local/share/fonts/mplus-2m-thin.otf .local/share/fonts/mplus-2p-black.otf .local/share/fonts/mplus-2p-bold.otf .local/share/fonts/mplus-2p-heavy.otf .local/share/fonts/mplus-2p-light.otf .local/share/fonts/mplus-2p-medium.otf .local/share/fonts/mplus-2p-regular.otf .local/share/fonts/mplus-2p-thin.otf 
git clone https://github.com/Gaugek/st
fc-list | grep -i "Fura Mono"
sudo make clean install clean
kak xrdb/solid/solid 
kak ~/xrdb/solid/solid 
colpanes
fc-list | grep -i "M+ 1mn"
fc-list | grep -i "iosevka term"
fc-list | grep -i "iosevka"
kak ~/xrdb/solid/solid
232635
color tab 232635
color tab 242837
color tab 4F4536
color tab 0e0f0e
color tab 101411
color tab 101411 0e0f0e
git clone https://github.com/BanchouBoo/stain.git
cd stain
src/shade 85AFE8
src/shade 85AFE8 2
ranger
shade 85AFE8 2
shade 85AFE8 1
shade 85AFE8 2 | color tab
shade 85AFE8 1 | color tab
shade 85AFE8 0.5 | color tab
shade 85AFE8 1/2 | color tab
shade 85AFE8 1/3 | color tab
shade 85AFE8 1/0.1 | color tab
shades 85AFE8 1/2 | color tab
shades 85AFE8 1/2
shades 6a8cb9
shades 547094
p10k
colorpane
bash -c "nvim clones/Termibbl/src/main.rs"
kak .doom.d/themes/doom-solid-theme.el 
kak .zsh_history
echo ":whale:âƒ¤ƒ‚ï¸ƒ¯:floshed~1::dizzy::dna::floshed~1::yo_yo::up::floshed~1::joy::up::star::floshed~1::sa::yen::floshed~1::ab::outbox_tray::floshed~1::mega::floshed~1::yo_yo::up::floshed~1::link:âƒ¤ƒ‚ï¸ƒ¯âƒ¤ƒ‚ï¸ƒ¯:leg::floshed~1::england::infinity::ear::ear::ram::floshed~1::id::llama::floshed~1::hash::vertical_traffic_light::floshed~1::yo_yo::up::floshed~1::knife::owl::floshed~1::id::floshed~1::grapes::duck::a::teddy_bear::floshed~1::top::floshed~1::office::floshed~1::m::yen::floshed~1::classical_building::floshed~1::ant::dna::floshed~1::id::vertical_traffic_light::floshed~1::bee::ng::floshed~1::infinity::volcano::vertical_traffic_light::dna::floshed~1::infinity::floshed~1::nut_and_bolt::merman::outbox_tray::sa::floshed~1::disappointed::corn::dna::floshed~1::repeat::adult::infinity::gem::floshed~1::grin::o::upside_down::floshed~1::ant::dna::floshed~1::hash::vertical_traffic_light::floshed~1::man::yen::floshed~1::confused::fire::medal::floshed~1:âƒ¤ƒ‚ï¸ƒ¯:repeat::sa::floshed~1::id::floshed~1::amphora::floshed~1::train::ear::dna::floshed~1::infinity::floshed~1::repeat::alien::floshed~1::ant::dna::floshed~1::compass::leg::x::floshed~1::ant::alien::yen::six::sa::floshed~1::ant::dna::floshed~1::imp::floshed~1::thermometer::floshed~1::top::floshed~1::alien::gem::brain::star::floshed~1::infinity::floshed~1::thermometer::floshed~1::end::tired_face::floshed~1::mate::herb::mate::ice_cube::sa::floshed~1::factory::up::leg:âƒ¤ƒ‚ï¸ƒ¯:yen::floshed~1::yo_yo::urn::ear::floshed~1::notes::hindu_temple::gem::floshed~1::top::floshed~1::mega::floshed~1::butter::floshed~1::ant::otter::herb::floshed~1::cow::homes::older_man::o::gem::yen:"
echo ":whale:âƒ¤ƒ‚ï¸ƒ¯:floshed~1::dizzy::dna::floshed~1::yo_yo::up::floshed~1::joy::up::star::floshed~1::sa::yen::floshed~1::ab::outbox_tray::floshed~1::mega::floshed~1::yo_yo::up::floshed~1::link:âƒ¤ƒ‚ï¸ƒ¯âƒ¤ƒ‚ï¸ƒ¯:leg::floshed~1::england::infinity::ear::ear::ram::floshed~1::id::llama::floshed~1::hash::vertical_traffic_light::floshed~1::yo_yo::up::floshed~1::knife::owl::floshed~1::id::floshed~1::grapes::duck::a::teddy_bear::floshed~1::top::floshed~1::office::floshed~1::m::yen::floshed~1::classical_building::floshed~1::ant::dna::floshed~1::id::vertical_traffic_light::floshed~1::bee::ng::floshed~1::infinity::volcano::vertical_traffic_light::dna::floshed~1::infinity::floshed~1::nut_and_bolt::merman::outbox_tray::sa::floshed~1::disappointed::corn::dna::floshed~1::repeat::adult::infinity::gem::floshed~1::grin::o::upside_down::floshed~1::ant::dna::floshed~1::hash::vertical_traffic_light::floshed~1::man::yen::floshed~1::confused::fire::medal::floshed~1:âƒ¤ƒ‚ï¸ƒ¯:repeat::sa::floshed~1::id::floshed~1::amphora::floshed~1::train::ear::dna::floshed~1::infinity::floshed~1::repeat::alien::floshed~1::ant::dna::floshed~1::compass::leg::x::floshed~1::ant::alien::yen::six::sa::floshed~1::ant::dna::floshed~1::imp::floshed~1::thermometer::floshed~1::top::floshed~1::alien::gem::brain::star::floshed~1::infinity::floshed~1::thermometer::floshed~1::end::tired_face::floshed~1::mate::herb::mate::ice_cube::sa::floshed~1::factory::up::leg:âƒ¤ƒ‚ï¸ƒ¯:yen::floshed~1::yo_yo::urn::ear::floshed~1::notes::hindu_temple::gem::floshed~1::top::floshed~1::mega::floshed~1::butter::floshed~1::ant::otter::herb::floshed~1::cow::homes::older_man::o::gem::yen:" | tr -d ':'
echo ":whale:âƒ¤ƒ‚ï¸ƒ¯:floshed~1::dizzy::dna::floshed~1::yo_yo::up::floshed~1::joy::up::star::floshed~1::sa::yen::floshed~1::ab::outbox_tray::floshed~1::mega::floshed~1::yo_yo::up::floshed~1::link:âƒ¤ƒ‚ï¸ƒ¯âƒ¤ƒ‚ï¸ƒ¯:leg::floshed~1::england::infinity::ear::ear::ram::floshed~1::id::llama::floshed~1::hash::vertical_traffic_light::floshed~1::yo_yo::up::floshed~1::knife::owl::floshed~1::id::floshed~1::grapes::duck::a::teddy_bear::floshed~1::top::floshed~1::office::floshed~1::m::yen::floshed~1::classical_building::floshed~1::ant::dna::floshed~1::id::vertical_traffic_light::floshed~1::bee::ng::floshed~1::infinity::volcano::vertical_traffic_light::dna::floshed~1::infinity::floshed~1::nut_and_bolt::merman::outbox_tray::sa::floshed~1::disappointed::corn::dna::floshed~1::repeat::adult::infinity::gem::floshed~1::grin::o::upside_down::floshed~1::ant::dna::floshed~1::hash::vertical_traffic_light::floshed~1::man::yen::floshed~1::confused::fire::medal::floshed~1:âƒ¤ƒ‚ï¸ƒ¯:repeat::sa::floshed~1::id::floshed~1::amphora::floshed~1::train::ear::dna::floshed~1::infinity::floshed~1::repeat::alien::floshed~1::ant::dna::floshed~1::compass::leg::x::floshed~1::ant::alien::yen::six::sa::floshed~1::ant::dna::floshed~1::imp::floshed~1::thermometer::floshed~1::top::floshed~1::alien::gem::brain::star::floshed~1::infinity::floshed~1::thermometer::floshed~1::end::tired_face::floshed~1::mate::herb::mate::ice_cube::sa::floshed~1::factory::up::leg:âƒ¤ƒ‚ï¸ƒ¯:yen::floshed~1::yo_yo::urn::ear::floshed~1::notes::hindu_temple::gem::floshed~1::top::floshed~1::mega::floshed~1::butter::floshed~1::ant::otter::herb::floshed~1::cow::homes::older_man::o::gem::yen:" | cut -d ':' -f 1
echo ":whale:âƒ¤ƒ‚ï¸ƒ¯:floshed~1::dizzy::dna::floshed~1::yo_yo::up::floshed~1::joy::up::star::floshed~1::sa::yen::floshed~1::ab::outbox_tray::floshed~1::mega::floshed~1::yo_yo::up::floshed~1::link:âƒ¤ƒ‚ï¸ƒ¯âƒ¤ƒ‚ï¸ƒ¯:leg::floshed~1::england::infinity::ear::ear::ram::floshed~1::id::llama::floshed~1::hash::vertical_traffic_light::floshed~1::yo_yo::up::floshed~1::knife::owl::floshed~1::id::floshed~1::grapes::duck::a::teddy_bear::floshed~1::top::floshed~1::office::floshed~1::m::yen::floshed~1::classical_building::floshed~1::ant::dna::floshed~1::id::vertical_traffic_light::floshed~1::bee::ng::floshed~1::infinity::volcano::vertical_traffic_light::dna::floshed~1::infinity::floshed~1::nut_and_bolt::merman::outbox_tray::sa::floshed~1::disappointed::corn::dna::floshed~1::repeat::adult::infinity::gem::floshed~1::grin::o::upside_down::floshed~1::ant::dna::floshed~1::hash::vertical_traffic_light::floshed~1::man::yen::floshed~1::confused::fire::medal::floshed~1:âƒ¤ƒ‚ï¸ƒ¯:repeat::sa::floshed~1::id::floshed~1::amphora::floshed~1::train::ear::dna::floshed~1::infinity::floshed~1::repeat::alien::floshed~1::ant::dna::floshed~1::compass::leg::x::floshed~1::ant::alien::yen::six::sa::floshed~1::ant::dna::floshed~1::imp::floshed~1::thermometer::floshed~1::top::floshed~1::alien::gem::brain::star::floshed~1::infinity::floshed~1::thermometer::floshed~1::end::tired_face::floshed~1::mate::herb::mate::ice_cube::sa::floshed~1::factory::up::leg:âƒ¤ƒ‚ï¸ƒ¯:yen::floshed~1::yo_yo::urn::ear::floshed~1::notes::hindu_temple::gem::floshed~1::top::floshed~1::mega::floshed~1::butter::floshed~1::ant::otter::herb::floshed~1::cow::homes::older_man::o::gem::yen:" | cut -d ':' -b 2
man cut
echo ":whale:âƒ¤ƒ‚ï¸ƒ¯:floshed~1::dizzy::dna::floshed~1::yo_yo::up::floshed~1::joy::up::star::floshed~1::sa::yen::floshed~1::ab::outbox_tray::floshed~1::mega::floshed~1::yo_yo::up::floshed~1::link:âƒ¤ƒ‚ï¸ƒ¯âƒ¤ƒ‚ï¸ƒ¯:leg::floshed~1::england::infinity::ear::ear::ram::floshed~1::id::llama::floshed~1::hash::vertical_traffic_light::floshed~1::yo_yo::up::floshed~1::knife::owl::floshed~1::id::floshed~1::grapes::duck::a::teddy_bear::floshed~1::top::floshed~1::office::floshed~1::m::yen::floshed~1::classical_building::floshed~1::ant::dna::floshed~1::id::vertical_traffic_light::floshed~1::bee::ng::floshed~1::infinity::volcano::vertical_traffic_light::dna::floshed~1::infinity::floshed~1::nut_and_bolt::merman::outbox_tray::sa::floshed~1::disappointed::corn::dna::floshed~1::repeat::adult::infinity::gem::floshed~1::grin::o::upside_down::floshed~1::ant::dna::floshed~1::hash::vertical_traffic_light::floshed~1::man::yen::floshed~1::confused::fire::medal::floshed~1:âƒ¤ƒ‚ï¸ƒ¯:repeat::sa::floshed~1::id::floshed~1::amphora::floshed~1::train::ear::dna::floshed~1::infinity::floshed~1::repeat::alien::floshed~1::ant::dna::floshed~1::compass::leg::x::floshed~1::ant::alien::yen::six::sa::floshed~1::ant::dna::floshed~1::imp::floshed~1::thermometer::floshed~1::top::floshed~1::alien::gem::brain::star::floshed~1::infinity::floshed~1::thermometer::floshed~1::end::tired_face::floshed~1::mate::herb::mate::ice_cube::sa::floshed~1::factory::up::leg:âƒ¤ƒ‚ï¸ƒ¯:yen::floshed~1::yo_yo::urn::ear::floshed~1::notes::hindu_temple::gem::floshed~1::top::floshed~1::mega::floshed~1::butter::floshed~1::ant::otter::herb::floshed~1::cow::homes::older_man::o::gem::yen:" | cut -d ':' -c 2
echo ":whale:âƒ¤ƒ‚ï¸ƒ¯:floshed~1::dizzy::dna::floshed~1::yo_yo::up::floshed~1::joy::up::star::floshed~1::sa::yen::floshed~1::ab::outbox_tray::floshed~1::mega::floshed~1::yo_yo::up::floshed~1::link:âƒ¤ƒ‚ï¸ƒ¯âƒ¤ƒ‚ï¸ƒ¯:leg::floshed~1::england::infinity::ear::ear::ram::floshed~1::id::llama::floshed~1::hash::vertical_traffic_light::floshed~1::yo_yo::up::floshed~1::knife::owl::floshed~1::id::floshed~1::grapes::duck::a::teddy_bear::floshed~1::top::floshed~1::office::floshed~1::m::yen::floshed~1::classical_building::floshed~1::ant::dna::floshed~1::id::vertical_traffic_light::floshed~1::bee::ng::floshed~1::infinity::volcano::vertical_traffic_light::dna::floshed~1::infinity::floshed~1::nut_and_bolt::merman::outbox_tray::sa::floshed~1::disappointed::corn::dna::floshed~1::repeat::adult::infinity::gem::floshed~1::grin::o::upside_down::floshed~1::ant::dna::floshed~1::hash::vertical_traffic_light::floshed~1::man::yen::floshed~1::confused::fire::medal::floshed~1:âƒ¤ƒ‚ï¸ƒ¯:repeat::sa::floshed~1::id::floshed~1::amphora::floshed~1::train::ear::dna::floshed~1::infinity::floshed~1::repeat::alien::floshed~1::ant::dna::floshed~1::compass::leg::x::floshed~1::ant::alien::yen::six::sa::floshed~1::ant::dna::floshed~1::imp::floshed~1::thermometer::floshed~1::top::floshed~1::alien::gem::brain::star::floshed~1::infinity::floshed~1::thermometer::floshed~1::end::tired_face::floshed~1::mate::herb::mate::ice_cube::sa::floshed~1::factory::up::leg:âƒ¤ƒ‚ï¸ƒ¯:yen::floshed~1::yo_yo::urn::ear::floshed~1::notes::hindu_temple::gem::floshed~1::top::floshed~1::mega::floshed~1::butter::floshed~1::ant::otter::herb::floshed~1::cow::homes::older_man::o::gem::yen:" | cut -d ':' -f 2
kak code
chmod +x code
echo ":whale:âƒ¤ƒ‚ï¸ƒ¯:floshed~1::dizzy::dna::floshed~1::yo_yo::up::floshed~1::joy::up::star::floshed~1::sa::yen::floshed~1::ab::outbox_tray::floshed~1::mega::floshed~1::yo_yo::up::floshed~1::link:âƒ¤ƒ‚ï¸ƒ¯âƒ¤ƒ‚ï¸ƒ¯:leg::floshed~1::england::infinity::ear::ear::ram::floshed~1::id::llama::floshed~1::hash::vertical_traffic_light::floshed~1::yo_yo::up::floshed~1::knife::owl::floshed~1::id::floshed~1::grapes::duck::a::teddy_bear::floshed~1::top::floshed~1::office::floshed~1::m::yen::floshed~1::classical_building::floshed~1::ant::dna::floshed~1::id::vertical_traffic_light::floshed~1::bee::ng::floshed~1::infinity::volcano::vertical_traffic_light::dna::floshed~1::infinity::floshed~1::nut_and_bolt::merman::outbox_tray::sa::floshed~1::disappointed::corn::dna::floshed~1::repeat::adult::infinity::gem::floshed~1::grin::o::upside_down::floshed~1::ant::dna::floshed~1::hash::vertical_traffic_light::floshed~1::man::yen::floshed~1::confused::fire::medal::floshed~1:âƒ¤ƒ‚ï¸ƒ¯:repeat::sa::floshed~1::id::floshed~1::amphora::floshed~1::train::ear::dna::floshed~1::infinity::floshed~1::repeat::alien::floshed~1::ant::dna::floshed~1::compass::leg::x::floshed~1::ant::alien::yen::six::sa::floshed~1::ant::dna::floshed~1::imp::floshed~1::thermometer::floshed~1::top::floshed~1::alien::gem::brain::star::floshed~1::infinity::floshed~1::thermometer::floshed~1::end::tired_face::floshed~1::mate::herb::mate::ice_cube::sa::floshed~1::factory::up::leg:âƒ¤ƒ‚ï¸ƒ¯:yen::floshed~1::yo_yo::urn::ear::floshed~1::notes::hindu_temple::gem::floshed~1::top::floshed~1::mega::floshed~1::butter::floshed~1::ant::otter::herb::floshed~1::cow::homes::older_man::o::gem::yen:" | cut -d ':' -f 2 | cut -c 1
echo ":whale:âƒ¤ƒ‚ï¸ƒ¯:floshed~1::dizzy::dna::floshed~1::yo_yo::up::floshed~1::joy::up::star::floshed~1::sa::yen::floshed~1::ab::outbox_tray::floshed~1::mega::floshed~1::yo_yo::up::floshed~1::link:âƒ¤ƒ‚ï¸ƒ¯âƒ¤ƒ‚ï¸ƒ¯:leg::floshed~1::england::infinity::ear::ear::ram::floshed~1::id::llama::floshed~1::hash::vertical_traffic_light::floshed~1::yo_yo::up::floshed~1::knife::owl::floshed~1::id::floshed~1::grapes::duck::a::teddy_bear::floshed~1::top::floshed~1::office::floshed~1::m::yen::floshed~1::classical_building::floshed~1::ant::dna::floshed~1::id::vertical_traffic_light::floshed~1::bee::ng::floshed~1::infinity::volcano::vertical_traffic_light::dna::floshed~1::infinity::floshed~1::nut_and_bolt::merman::outbox_tray::sa::floshed~1::disappointed::corn::dna::floshed~1::repeat::adult::infinity::gem::floshed~1::grin::o::upside_down::floshed~1::ant::dna::floshed~1::hash::vertical_traffic_light::floshed~1::man::yen::floshed~1::confused::fire::medal::floshed~1:âƒ¤ƒ‚ï¸ƒ¯:repeat::sa::floshed~1::id::floshed~1::amphora::floshed~1::train::ear::dna::floshed~1::infinity::floshed~1::repeat::alien::floshed~1::ant::dna::floshed~1::compass::leg::x::floshed~1::ant::alien::yen::six::sa::floshed~1::ant::dna::floshed~1::imp::floshed~1::thermometer::floshed~1::top::floshed~1::alien::gem::brain::star::floshed~1::infinity::floshed~1::thermometer::floshed~1::end::tired_face::floshed~1::mate::herb::mate::ice_cube::sa::floshed~1::factory::up::leg:âƒ¤ƒ‚ï¸ƒ¯:yen::floshed~1::yo_yo::urn::ear::floshed~1::notes::hindu_temple::gem::floshed~1::top::floshed~1::mega::floshed~1::butter::floshed~1::ant::otter::herb::floshed~1::cow::homes::older_man::o::gem::yen:" | tr -d 'whale'
echo $code | tr -d ':whale:'
echo $code'
echo $code | tr -d ':whale'
echo $code | tr -d ':' ' '
man tr
echo $code | tr -d [':'] [' ']
echo $code | tr -d [':']
echo "1234" | tr ['2'] ['x'*3]
echo $code | tr ':' ' '
echo $code | tr ':' ' ' | cut -f 1
echo $code | tr ':' ' ' | cut -f 2
echo $code | tr ':' ' ' | cut -d ' ' -f 3
echo $code | tr ':' ' ' | cut -d ' ' -f 4
echo $code | tr ':' ' ' | cut -d ' ' -f 2
code=$(./code)
echo $code | tr -d 'whale'
./code | tr -d 'fuck'
./code | tr -d 'whale'
fuck=$(echo $code | cut -d ' ' -f 1)\

echo $fuck
echo $code | tr -d '$fuck'
code=":whale:âƒ¤ƒ‚ï¸ƒ¯:floshed~1::dizzy::dna::floshed~1::yo_yo::up::floshed~1::joy::up::star::floshed~1::sa::yen::floshed~1::ab::outbox_tray::floshed~1::mega::floshed~1::yo_yo::up::floshed~1::link:âƒ¤ƒ‚ï¸ƒ¯âƒ¤ƒ‚ï¸ƒ¯:leg::floshed~1::england::infinity::ear::ear::ram::floshed~1::id::llama::floshed~1::hash::vertical_traffic_light::floshed~1::yo_yo::up::floshed~1::knife::owl::floshed~1::id::floshed~1::grapes::duck::a::teddy_bear::floshed~1::top::floshed~1::office::floshed~1::m::yen::floshed~1::classical_building::floshed~1::ant::dna::floshed~1::id::vertical_traffic_light::floshed~1::bee::ng::floshed~1::infinity::volcano::vertical_traffic_light::dna::floshed~1::infinity::floshed~1::nut_and_bolt::merman::outbox_tray::sa::floshed~1::disappointed::corn::dna::floshed~1::repeat::adult::infinity::gem::floshed~1::grin::o::upside_down::floshed~1::ant::dna::floshed~1::hash::vertical_traffic_light::floshed~1::man::yen::floshed~1::confused::fire::medal::floshed~1:âƒ¤ƒ‚ï¸ƒ¯:repeat::sa::floshed~1::id::floshed~1::amphora::floshed~1::train::ear::dna::floshed~1::infinity::floshed~1::repeat::alien::floshed~1::ant::dna::floshed~1::compass::leg::x::floshed~1::ant::alien::yen::six::sa::floshed~1::ant::dna::floshed~1::imp::floshed~1::thermometer::floshed~1::top::floshed~1::alien::gem::brain::star::floshed~1::infinity::floshed~1::thermometer::floshed~1::end::tired_face::floshed~1::mate::herb::mate::ice_cube::sa::floshed~1::factory::up::leg:âƒ¤ƒ‚ï¸ƒ¯:yen::floshed~1::yo_yo::urn::ear::floshed~1::notes::hindu_temple::gem::floshed~1::top::floshed~1::mega::floshed~1::butter::floshed~1::ant::otter::herb::floshed~1::cow::homes::older_man::o::gem::yen:"
code=$(echo $code | tr ':' '\n')
echo $code
echo $code | tr -d ' '
echo $code | tr -d '\n'
./code
./code | tr ' ' '/n'
./code | tr ':' '/n'
./code | tr ':' '\n'
./code | tr ' ' '\n'
./code | tr ' ' '\n' | xclip -sel clip
cat reee.txt
cat reee.txt | tr '\n' ' '
cat reee.txt | tr '\n' ' ' | xclip -sel clip
cat reee.txt | tr -d '\n' | xclip -selection -clip
cat reee.txt | tr -d '\n'
cat reee.txt | tr -d '\n' | xclip -sel clip
fc-list | grep -i "Ubuntu"
cp Downloads/UbuntuMono-Regular.ttf .local/share/fonts
mkdir .config/alacritty
kak .config/alacritty/alacritty.yml
alacritty
fc-list | grep -i "Ubuntu" | grep 'home'
cat ~/xrdb/solid/solid 
cat ~/xrdb/solid/solid  | xclip -selection clipboard
ls /
cat /dev/urandom
rm .local/share/fonts/LICENSE_E .local/share/fonts/LICENSE_J .local/share/fonts/UbuntuMono-Regular.ttf
ls /bin
shitfetch
git clone https://github.com/awesomeWM/awesome.git
cd awesome
xi cmake
xi lua
xrs lua
xr alacritty
xr ncurses
xi lua-devel
xrs xcb
xi xcb-util-xrm-devel
xrs cursor
xrs keysm
xrs keysym
xrs iccm
xrs icccm
xrs xkb
xi xcb-util-cursor-devel xcb-util-keysyms-devel xcb-util-wm-devel libxkbcommon-devel 
xrs gdk
xi gdk-pixbuf-devel
xrs libstartup
xrs startup
xi startup-notification-devel
xi lgi
xi eid-mw-devel
xr -R eid-mw-devel
xi -R lgi
xr -R lgi
xrs lgi
xi lua52-lgi
xr -R awesome
xi lua53-lgi
awesome
killall Xorg
xrs typicon
xrs typ
fc-list | grep -i "typicon"
fc-list | grep -i "typicons"
npm install typicons.font
fc-list | grep -i "icons"
xinit awesome
mpv https://www.youtube.com/discord/live
git clone https://github.com/unixporn/trup.git
cd trup
go run
psql
xrs psql
xrs postgre
xrs postgresql
killall firefox
chmod +X Downloads/phicom2
chmod +x Downloads/phicom2
ls bin
bin/picom-trans
where picom
cp /usr/local/bin/picom .
ninja
ninja --help
git clone https://github.com/ibhagwan/picom.git
diff -U .picom
diff -U ./picom
diff picom ../picom
xrs meld
xi meld
rm picom
tar xvzf Downloads/picom.tar.gz
xr -R meld
diff picom ../phicom
diff picom ../phicom > patch.diff
kak patch.diff
ka transitions.diff
kak transitions.diff
cp transitions.diff ../clones/picom
patc
patch
xi patch
patch -p1 -i transitions.diff
ls src/picom.h.rej
ls *.rej
ls .github
ls -A
rm -rf .git
cp -rf ~/clones/picom/* ./
cp -rf .git ./
git submodule update --init --recursive
lls
ls src/backend/backend.c
patch -R -i ~/clones/picom/transitions.diff
ninja -C build install
~/Downloads/phicom2
cd picom/
tar xvzf ~/Downloads/picom.tar.gz
diff transitions.diff ~/clones/picom/transitions.diff
diff picom clones/picom 
meson --reconfigure
meson --reconfigure --buildtype=release . build
diff src ~/picom/src
diff ~/picom/src src
patch -p1 -i ~/clones/picom/transitions.diff
kak src/pico.h
rm src/picom.h.rej
rm src/event.c.orig src/picom.c.orig src/picom.h.orig src/win.c.orig src/win.h.orig 
git diff --cached > mypatch.patch
git diff --cached
git diff > mypatch.patch
kak mypatch.patch
patch -p1 -i ~/clones/picom/mypatch.patch
rm mypatch.patch
patch -p1 -i ~/clones/picom/mypatch.diff
cd 
cd clones/picom
tar xvzf ~/Downloads/picom\(2\).tar.gz
mv picom phicom
cd phicom
patch -p1 -i ~/phicom/transitions.diff
git diff > mypatch.diff
kak mypatch.diff
rm src/picom.h.rej src/event.c.orig src/picom.c.orig src/picom.h.orig src/win.c.orig src/win.h.orig *.orig
rm -rf picom
git clone https://github.com/Tanish2002/picom.git
patch -p1 -i ~/phicom/mypatch.diff
kak src/picom.h
cd picom
kak src/picom.h.rej
rm src/picom.h.rej src/event.c.orig src/picom.c.orig src/picom.h.orig src/win.c.orig src/win.h.orig
git commit -m "Merged phisch's(https://github.com/phisch) transition code"
meson --buildtype=release . build
ninja -C build
sudo ninja -C build install
Downloads/phicom2
curl parrot.live
mpv Downloads/tenor.gif
cd dwm-tanish2002
kak config.h
sd
echo $code | xclip -sel clip
gradient
gradient 101411 E5E0D9
gradient 101411 E5E0D9 10
gradient 101411 E5E0D9 10 | hexblocks
gradient 101411 4F4536 10 | hexblocks
gradient 101411 4F4536 100 | hexblocks
git clone git@gitlab.com:Tanish2002/tanish2002.gitlab.io.git
date
kak .zshrc
cat .zimrc
h
ls .config/zsh
ls .config/zsh -A
cat .config/zsh/.zhistory
cat .zsh_history
cat .zsh_history | xclip -sel clip
kak .config/zsh/.zim/modules/completion/init.zsh
ls .p10k.zsh
p10k configure
cp .p10k.zsh .config/zsh/
cp -rf .p10k.zsh .config/zsh/
ls .config/zsh/
ls .config/zsh/.p10k.zsh
readlink .config/zsh/.p10k.zsh
ls dot-files/common/.p10k.zsh
cp dot-files/common/.p10k.zsh .config/zsh
rm .config/zsh/.p10k.zsh
cp -rf dot-files/common/.p10k.zsh .config/zsh
mv .config/zsh .config/zsh1
cp .config/zsh1 dot-files/Dwm_solid/.config/zsh
cp -rf .config/zsh1 dot-files/Dwm_solid/.config/zsh
ls -A common
rm common/.p10k.zsh
stow Dwm_solid -t ~/
rm .zshrc
kak .config/zsh/.zshrc
kak .config/zsh/.zimrc
zimfw compile
st -e zsh
st -e "sudo zsh"
doom upgrade
ls /etc/xdg/
ls /etc/xdg/ -A
xrs ripgrep
xi ripgrep
xi fzf
source /usr/share/doc/fzf
source /usr/share/doc/fzf/completion.zsh /usr/share/doc/fzf/key-bindings.bash /usr/share/doc/fzf/key-bindings.fish /usr/share/doc/fzf/key-bindings.zsh 
xrs fuzzy
vi
fzf -m
fzf --help
kak $(fzf -m)
vi $(fzf -m)
xrs skim
xrs fuzzy finder
xrs "fuzzy finder"
xrs "fuzzy"
xi skim
sk
xr -R skim
fzf
pac
git clone https://github.com/GaugeK/polka.git
cd polka
ls usr
ls opt
cat opt/discord-delete-messages.js
cat opt/discord-delete-messages.js | xcip -sel cip
cat opt/discord-delete-messages.js | xcip -sel clip
cat opt/discord-delete-messages.js | xclip -sel clip
xrs lutris
xi lutris
cp Downloads/TLauncher-MCL.jar ./
xrs java
xi openjdk8
java -jar TLauncher-MCL.jar
xrs proton
xi protonvpn-cli
sudo protonvpn init
where protonvpn 
protonvpn c -f
protonvpn --help
java -jar Downloads/fabric-installer-0.6.1.45.jar
mkdir .minecraft/mods
cp Downloads/Wurst-Client-v7.4-MC1.16.1.jar Downloads/fabric-api-0.14.0+build.371-1.16.jar .minecraft/mods
where java
cp Downloads/preview_OptiFine_1.16.1_HD_U_G2_pre10.jar .minecraft/mods
java -jar Downloads/preview_OptiFine_1.16.1_HD_U_G2_pre10.jar
rm .minecraft/mods/preview_OptiFine_1.16.1_HD_U_G2_pre10.jar
cp Downloads/Wurst-Client-v7.4-MC1.16.1.jar .minecraft/mods/
rm .minecraft/mods/sodium-fabric-mc1.16.1-0.1.0.jar
cp Downloads/sodium-fabric-mc1.16.1-0.1.0.jar .minecraft/mods/
cp Downloads/phosphor-fabric-mc1.16.1-0.6.0+build.7.jar .minecraft/mods/
feh screenshots/2020-07-27_04:41:59.png
feh screenshots/2020-07-27_04:42:53.png
cp -rf .minecraft/mods .minecraft/mods1
rm -rf .minecraft/mods/Wurst-Client-v7.4-MC1.16.1.jar .minecraft/mods/phosphor-fabric-mc1.16.1-0.6.0+build.7.jar .minecraft/mods/sodium-fabric-mc1.16.1-0.1.0.jar 
cp .minecraft/mods1/Wurst-Client-v7.4-MC1.16.1.jar .minecraft/mods1/fabric-api-0.14.0+build.371-1.16.jar .minecraft/mods1/fabritone-1.5.3.jar .minecraft/mods1/phosphor-fabric-mc1.16.1-0.6.0+build.7.jar .minecraft/mods1/sodium-fabric-mc1.16.1-0.1.0.jar .minecraft/mods/
rm .minecraft/mods/Wurst-Client-v7.4-MC1.16.1.jar
rm .minecraft/mods/Sigma5.jar .minecraft/mods/Sigma5.json 
mv .minecraft/mods .minecraft/mods_back
xrs minecraft
xi MultiMC
mv .minecraft/mods_back .minecraft/mods
ls .minecraft/mods_back
rm .minecraft/mods/meteor-client-0.2.8-1.16.1.jar
cp Downloads/Wurst-Client-v7.3-MC1.16.1.jar .minecraft/mods/
rm .minecraft/mods/sodium-fabric-mc1.16.1-0.1.0.jar .minecraft/mods/phosphor-fabric-mc1.16.1-0.6.0+build.7.jar
cp .minecraft/mods1/phosphor-fabric-mc1.16.1-0.6.0+build.7.jar .minecraft/mods/
cp .minecraft/mods1/Wurst-Client-v7.4-MC1.16.1.jar .minecraft/mods/
rm .minecraft/mods/Wurst-Client-v7.3-MC1.16.1.jar
xrs ntfs
xi ntfs-3g
echo "acesoar@gmail.com:blackhawk17" >> alts.txt
echo "acesoar@gmail.com:blackhawk17" > alts.txt
moe screenshots/2020-07-29_01:24:15.png
feh screenshots/2020-07-29_01:24:15.png
moe screenshots/2020-07-29_01:25:03.png
feh 'https://i.fiery.me/QC9O1.png\
'
feh 'https://i.fiery.me/QC9O1.png'
rm -rf ../phisch
sudo rm -rf ../phisch
tar xvzf ~/Downloads/Minecraft.tar.gz
./minecraft-launcher
cat alts.txt
cat alts.txt | xclip -sel clip
cd minecraft-launcher
./minecraft-launcher 
mkdir .minecraft/versions/1.16.1-Aristois/mods
cp .minecraft/mods/optifine.jar .minecraft/versions/1.16.1-Aristois/mods
ls .minecraft/versions/1.16.1-Aristois/
ls .minecraft/versions/1.16.1-Aristois/mods
cp Downloads/lithium-fabric-mc1.16.1-0.5.1.jar .minecraft/mods/
ls .minecraft/mods
rm .minecraft/mods/optifine.jar
killall java
xbacklight
git clone
git clone https://github.com/jmorag/kakoune.el.git
cp .doom.d/kak.el .doom.d/kak1.el
cp .doom.d/kak1.el .doom.d/kak.el
cp kakoune-utils.el ../
cp kakoune-utils.el kakoune.el/
git commit -m "Changed 'X' and 'x' behaviour"
kak kakoune.el/kakoune-utils.el
git commit -m "Added 'ge' and 'Ge'"
bash -c "nvim"
doom help
doom -h sync
doom -h compile
doom compile -r kakoune
git commit -m "Fix 'X' Behaviour"
kak ~/.doom.d/packages.el
git commit -m "Complete Redo of 'x' and 'X'"
timeout
timeout --help
timeout 2s ee
alias
alias | grep ee
alias | grep ed
killall st
killall xdo
timeout 2s emacs
timeout 2s devour emacsclient --socket-name=weeb-emacsd -c
rm record-2020.07.30-00:54:22.mp4
rm record-2020.07.30-00:54:48.mp4
cat .config/bspwm/bspwmrc
ldd
ldd $(where emacs)
ldd emacs
ldd /bin/emacs
ldd /bin/dwm
ldd /usr/local/bin/dwmc
ldd /usr/local/bin/dwm
ldd /usr/bin/bspwm
kak ~/.doom.d/config.el
kak ~/kakoune-utils.el 
lf
feh splash-images/blackhole-lines-0.svg
xrs imlib2
rm Downloads/rsz_bill.png
mv Downloads/rsz_1bill.png Downloads/rsz_bill.png
timeout 2s emacsclient --socket-name=weeb-emacsd -c
mv Downloads/rsz_bill.png .doom.d/themes/bill.png
feh .doom.d/themes/bill.png
ping dicord.com
doom doctor
doom install
cp -rf .doom.d .doom1.d
emacs --version
rm .emacs.d
cp .doom1.d .doom.d
cp -rf .doom1.d .doom.d
xranrd
xrandr
xrandr -s 1920x1080
xrandr -s 1366x768
xrandr -s 32767x32767
kak .doom.d/config.org
kak kakoune-unimpaired.el
git commit -m "Some changes"
rm kakoune.el
git clone https://github.com/Tanish2002/kakoune.el.git
kak kakoune-u
ww
kak kakoune-utils.el
git revert 0cebbac --hard
git reset 0cebbac --hard
git revert 0cebbac
rm -rf kakoune.el
cd kak
cat .config/ssh/key | xclip -sel clip
cat .config/ssh/key.pub | xclip -sel clip
git clone git@github.com:Tanish2002/kakoune.el.git
kak kakoune.el
cp ~/Downloads/richard.png ~/.doom.d/themes
rm ~/Downloads/gentoo.png
feh 'https://online-photo-converter.com/download?file=L3VzZXItZmlsZXMvMjAyMDA3MzAyMzE5LTMwMDc4NjkxMjE2L2kwMV9nZW50b28ucG5n&back_link=L2JsYWNrLWFuZC13aGl0ZS1pbWFnZQ=='
feh 'https://online-photo-converter.com/download?file=L3VzZXItZmlsZXMvMjAyMDA3MzAyMzIwLTc2Mzk0MTUxMDgyL2kwMV9nZW50b28ucG5n&back_link=L3Bob3RvLXRvLXBlbmNpbC1za2V0Y2g='
rm ~/Downloads/UIHere.png
sudo protonvpn c -f
sudo protonvpn d
feh screenshots/2020-07-31_05:14:09.png
ls .local/bin
shade 1/2 6a5c48
shade 1/2 #6a5c48
shade 6a5c48 1/2
shade 6a5c48 1/2 | hexblocks
shade 6a5c48 1/3 | hexblocks
shade 6a5c48 2 | hexblocks
shade 6a5c48 1.3 | hexblocks
shade 6a5c48 3/2 | hexblocks
shade 6a5c48 2/(1/2) | hexblocks
shade 6a5c48 13/10 | hexblocks
shade 6a5c48 12/10 | hexblocks
shade 6a5c48 125/100 | hexblocks
feh screenshots/2020-07-31_05:32:28.png
feh 'https://www.photojoiner.net/download/?fid=PjDf4w8H'
xrs filezilla
xi filezilla
feh Downloads/pjimage.png
emacs dicord.css
ed Discord
ed dicord.css
fch
curl -s https://raw.githubusercontent.com/mitchweaver/bin/master/rice/fch
cat /proc/meminfo
cat /proc/meminfo | grep MemTotal
cat /proc/meminfo | grep MemTotal | cut -f 2
cat /proc/meminfo | grep MemTotal | cut -d ':' -f 3
cat /proc/meminfo | grep MemTotal | cut -d ':' -f 2
cat /proc/meminfo | grep MemTotal | cut -d ':' -f 2 | tr -d ' '
human
cat /proc/meminfo | grep MemTotal | cut -d ':' -f 2 | tr -d ' ' | human
cat /proc/meminfo | grep MemTotal | cut -d ':' -f 2 | tr -d ' ' | tr -d 'kB' | human
cat /proc/meminfo | grep MemTotal | cut -d ':' -f 2 | tr -d ' ' | tr -d 'kB'
echo $((total * 1024))
total=$(cat /proc/meminfo | grep Shmem | cut -d ':' -f 2 | tr -d ' ' | tr -d 'kB')
total=$(cat /proc/meminfo | grep Shmem | head -n1 | cut -d ':' -f 2 | tr -d ' ' | tr -d 'kB')
shmem=$(cat /proc/meminfo | grep Shmem | head -n1 | cut -d ':' -f 2 | tr -d ' ' | tr -d 'kB')
total=$(cat /proc/meminfo | grep MemTotal | cut -d ':' -f 2 | tr -d ' ' | tr -d 'kB')
echo $total
echo $shmem
total=$((total + shmem))
echo $((total * 1024)) | human
kak mem
cat bin/0x0
chmod +x mem
curl -s https://raw.githubusercontent.com/mitchweaver/bin/master/rice/fch | sh
kak bin/human
emacs -help
emacs -1
emacs -q
emacs -nw
git clone https://github.com/hboetes/mg.git
cd mg
xrs libbsd
xi libbsd-devel
xrs libncurses
xi ncurses-libtinfo-devel
xi ncurses-libtinfo-libs
xrs ncurses
xrs mg
xi mg
mg
mg --help
mg -help
man mg
xr -R mg
xi zile
zile
xr-R zile
xr -R zile
rm -rf mg
git clone https://git.kernel.org/pub/scm/editors/uemacs/uemacs.git
em
cd uemacs
sudo make uninstall
sudo rm -rf /usr/bin/em
feh screenshots/2020-07-31_19:30:11.png
sudo rm -rf /usr/lib/emacs.hlp
sudo rm -rf /usr/lib/.emacsrc
kak Makefile
xrs screenkey
xi screenkey
screenkey
screenkey &
git lo
git commit -m "some fixes"
git log
xrs gccemacs
ping play.minecraftindia.com
git clone git://git.savannah.gnu.org/emacs.git
cd emacs
git checkout feature/native-comp
xrs autoconf
xi autoconf
./autogen.sh
./configure --with-nativecomp
xrs makeinfo
xrs info
./configure --with-nativecomp --without-makeinfo
xrs xtoolkit
xrs toolkit
./configure --with-nativecomp --without-makeinfo --with-x-toolkit=no
xrs native
xrs native-comp
rm emacs
rm -rf emacs
xrs emacs
xr -R emacs
xr -R emacs-x11
rm -rf uemacs
tar xvzf ~/Downloads/emacs-27.1-rc1.tar.gz
cd emacs-27.1
xrs libXaw
xi libXaw-devel
xrs libgif
xrs libungif
xrs libun
cd void-packages/srcpkgs/emacs
xi gnutls-devel
xi giflib-devel
./configure
xrs libgcc
xrs gcc
xrs jit
cp .emacs.d .emacs1.d
cp -rf .emacs.d .emacs1.d
git clone --depth 1 https://github.com/seagle0128/.emacs.d.git ~/.emacs.d
ls .emacs.d
sudo rm -rf /var/service/emacs-daemon
kake .emacs.d/init
curl -L https://git.io/epre | kak
curl -L https://git.io/epre
curl -L https://git.io/epre | sh
git clone https://github.com/bling/dotemacs.git ~/.emacs.d
du -sh .emacs.d
git clone https://github.com/PythonNut/quark-emacs.git ~/.emacs.d
git clone git clone --recurse-submodules -j8 https://github.com/MatthewZMD/.emacs.d.git
git clone --recurse-submodules -j8 https://github.com/MatthewZMD/.emacs.d.git
kak .emacs.d/init.el
xrs sass
rm -rf gtk
git clone https://github.com/elkowar/gtk.git
cd gtk
rm package-lock.json
kak PROBLEMS.md
cat package.json
make
make install
sudo make install
kak .config/gtk-3.0/settings.ini
cd gtk/
ls 
cd assets
kak scss/gtk-3.0/_applications.scss
kak scss/gtk-3.0/_colors.scss
kak gtk-3.0/gtk.css 
cd ~; git clone https://github.com/redguardtoo/emacs.d.git .emacs.d
cp -rf .emacs1.d .emacs.d
cd kakoune.el
kak kakoune-evil.el
ls .doom
ls .doom.d
kak .doom.d/kak-evil.el
rm -rf .emacs.keyfreq .emacs.d
rm -rf .doom.d/kak-evil.el .doom.d/kak1.el
cp -rf .doom.d .doom.d.bak
rm -rf .doom.d.bak
cp dot-files/common/.doom.d .doom.d.bak
cp -rf dot-files/common/.doom.d .doom.d.bak
.emacs.d/bin/doom install
cp .doom.d.bak dot-files/common/.doom.d
cp -rf .doom.d.bak dot-files/common/.doom.d
kak .doom.d
cp kakoune.el/kakoune-evil.el .doom.d/kak-evil.el
emacs --debug-init
ee --debug-init
git clone https://github.com/DogLooksGood/meow.git
synclient TouchpadOff=1
kak +emacs-bindings.el
kak +evil-bindings.el
cd .emacs.d/modules/config/default/
cp +emacs-bindings.el ~/.doom.d/
mkdir -p ~/.doom.d/modules/config/default
cp .emacs.d/modules/config/default ~/.doom.d/modules/config/default
kak .doom.d/modules/config/default/default/packages.el
kak .doom.d/modules/config/default/default/README.org
kak .doom.d/packages.el
kak .doom.d/config.el
rm -rf .doom.d/modules/config/default/default/+evil-bindings.el
rm -rf .doom.d/modules/config/default/default/+evil.el 
kak .doom.d/modules/config/default/default/config.el
kak .doom.d/modules/config/default/default/+evil.el
kak .doom.d/modules/config/default/default/+emacs-bindings.el
kak .doom.d/modules/config/default/default/+evil-bindings.el
kak .doom.d/modules/config/default/default/+emacs.el
rm -rf .doom.d/modules/config/default/default/+emacs-bindings.el .doom.d/modules/config/default/default/+emacs.el .doom.d/modules/config/default/default/+evil-bindings.el .doom.d/modules/config/default/default/+evil.el .doom.d/modules/config/default/default/README.org .doom.d/modules/config/default/default/autoload .doom.d/modules/config/default/default/config.el .doom.d/modules/config/default/default/packages.el 
mv -rf .~/.doom.d/modules/config/default ./
mv .~/.doom.d/modules/config/default ./
xrs ag
xi ag
xrs silver
xi the_silver_searcher
ag
xr -R the_silver_searcher
rg
cp -rf .emacs.d/modules/config/default ~/.doom.d/modules/config/default
kak binding
rm -rf .emacs.d
rm -rf .doom.d
doom
git clone --depth 1 https://github.com/hlissner/doom-emacs ~/.emacs.d
~/.emacs.d/bin/doom install
readlink .doom.d
lrr
stow -D common
stow common -t ~/
cat binding
r
cat binding | xclip -selection clipboard
sudo ln -s /etc/sv/emacs-daemon /var/service
sudo sv start emacs-daemon
xrs xmonad
cd void-packages/srcpkgs/xmonad
cd ../xmonad-contrib
kak files/stack.yaml 
emacs
xi ghc libX11-devel
echo "export PATH=$PATH:~/.cabal/bin" >> ~/.profile
cat ./.profile
echo $PATH | grep cabal
tar xvzf ~/Downloads/cabal-install-3.2.0.0.tar.gz
xrs cabal
cd void-packages/srcpkgs/cabal-install
xrs gmp-devel
xrs libffi
xrs zlib
kak patches/ghc-8.8.3.patch
kak patches/http.patch
patch -p1 -i ~/void-packages/srcpkgs/cabal-install/patches/http.patch
cd cabal-install-3.2.0.0
./bootstrap.sh
xi cabal-install
cd void-packages/srcpkgs/xmonad-contrib
kak update
xi xmonad xmonad-contrib
mkdir .xmonad
xrs xrandr
xi libXrandr-devel
xrs libxss
xrs libXss
xrs libX
xrs Xss
xrs scrn
xi libXScrnSaver-devel
kak how-to.html
kak bin/autostart 
cp bin/autostart bin/autostart-xmonad
cat .config/sxhkd/sxhkdrc | grep rofi
rofi -show drun
xr -R xmonad xmonad-contrib
cabal install xmonad xmonad-contrib
cabal install xmonad-contrib
cabal install --lib xmonad-contrib
ls .cabal/bin
sudo kak /etc/environment
kak .config/zsh/user_config.zsh
cat .profile
kak .profile
kak .config/zsh/config/user_config.zsh
ls /etc/profile.d/bash.sh
cat /etc/profile.d/bash.sh
sudo kak /etc/profile.d/xmonad.sh
sudo kak /etc/profile.d/env.sh
echo $PATH
xi xterm
.xmonad/xmonad-x86_64-linux
killall amixer
killall bar
xmonad --recompile
kak .xmonad/xmonad1.hs
firefox
cat .config/sxhkd/sxhkdrc | grep tabbed
stow -D Dwm_solid
amixer
git clone https://github.com/elkowar/Desktop-dotfiles.git
.config/polybar/launch.sh
picom -c .config/picom/picom.conf
picom --help
picom --help | grep config
picom --config .config/picom/picom.conf
kak https://cdn.discordapp.com/attachments/635625758412505093/740665567991562330/pls_dont.png
emacs https://cdn.discordapp.com/attachments/635625758412505093/740665567991562330/pls_dont.png
kak Downloads/pls_dont.png
sleep 2 && screenshot-menu.sh
mv Downloads/pls_dont.png Downloads/pls_dont.rar
mv Downloads/pls_dont.png Downloads/pls_dont.pak
mv Downloads/pls_dont.rar Downloads/pls_dont.pak
screenshot-menu.sh
kak ~/.xmonad/xmonad.hs
polybar top
xrdb ~/xrdb/nier/nier 
git clone https://github.com/polybar/polybar.git
xrs clang
xrs libcurl
xi libcurl-devel
xrs libmpd
xi libmpdclient-devel
xrs iw
xi libnl-devel
xi libnl3-devel
xi libnl3-progs
xrs libnl
xi libiw
xrs libiw
./
xrs Lib
xrs Libiw
xrs wireless
xi wireless_tools-devel
xrs libpulse
cd void-packages/srcpkgs/polybar
xi pulseaudio-devel
polybar --version
cd dot-files
stow -D xmonad_solid
stow xmonad_solid -t ~/
xr -R polybar
xi jsoncpp
cd polybar
./build.sh
polybar -vvv
mpv record-2020.08.06-03:12:42.mp4
hello
echo hello
cat /dev/random
kak bin/autostart-xmonad
term_draw
rofi-emoji
kak bin/rofi_mpvtube
ls /tmp/mpvsocket
kak bin/song-name
song-name
mpvctl
kak bin/mpvctl
source bin/mpvctl
echo $sock
xrs netcat
xi openbsd-netcat
mpvctl -t
xrs osaka
fc-cache -v
fc-list | grep -i "osaka"
man xdotool
man xdotool | xclip -sel clip
makewhatis /usr/share/man
man xdotool | moe
man xdotool | 0x0
curl -s http://0x0.st/i3Sm.txt
sudo makewhatis /usr/share/man
curl -s 'http://0x0.st/i3Sm.txt' | less
kak .config/sxhkd/sxhkdrc
zz
neofetch
echo $id
mpv record-2020.08.06-03:57:13.mp4
devour mpv record-2020.08.06-03:57:13.mp4
mpv
update
cd void-packages/srcpkgs
cd discord
kak template
cd void-packages
rm -rf void-packages
git clone https://github.com/void-linux/void-packages.git
git clone --depth=1 https://github.com/void-linux/void-packages.git
./xbps-src binary-bootstrap
echo XBPS_ALLOW_RESTRICTED=yes >> etc/conf
echo XBPS_ALLOW_RESTRICTED=yes > etc/conf
kak srcpkgs/discord
kak srcpkgs/discord/
cd void-packages/
sha256sum ~/Downloads/discord-0.0.11.tar.gz
kak srcpkgs/discord/template
./xbps-src pkg discord
sudo xbps-install --repository /home/weeb/void-packages/hostdir/binpkgs/nonfree discord
mpv record-2020.08.06-03:57:13.mp4 
killall -KILL firefox
rm record-2020.07.20-00:43:25.mp4 record-2020.07.20-02:48:32.mp4 record-2020.07.20-17:25:38.mp4 record-2020.07.20-23:55:28.mp4 record-2020.07.21-18:24:23.mp4 record-2020.07.21-19:22:17.mp4 record-2020.07.22-01:57:01.mp4 record-2020.07.22-18:44:22.mp4 record-2020.07.22-19:48:14.mp4 record-2020.07.30-00:55:23.mp4 record-2020.07.31-19:38:56.mp4 record-2020.08.06-03:11:29.mp4 record-2020.08.06-03:12:42.mp4 record-2020.08.06-03:28:27.mp4 record-2020.08.06-03:28:57.mp4 record-2020.08.06-03:57:13.mp4 record-2020.08.06-23:22:02.mp4 record-2020.08.07-00:15:59.mp4 
mpv record-2020.08.06-23:22:02.mp4
mpv record-2020.08.07-00:16:31.mp4
feh screenshots/2020-08-07_00:59:13.png
xrs sane
xi hplip
hplip
hpsetup
hplip-gui
xrs hplip
hplip-plugin
hplip-setup
hp-setup
xrs GPG
xrs gnupg
xi gnupg gnupg2
gpg
hp-plugin
sudo hp-setup
sudo hp-help
sudo hp
where hp-setup
ls /bin/hp-* | basename
basename $(ls /bin/hp-*)
ls /bin/hp-*
sudo hp-plugin
sudo hp-doctor
cups
sudo ln -s /etc/sv/cupsd /var/service
hp-doctor
sudo hp-setup -i
sudo rm -rf /var/service/cupsd
kak .config/awesome/keys.lua
xrs taffybar
xrs taffy
sleep -1
sleep 999999999999999999999
ee
emacs --fg-daemon=weeb-emacsd 2>&1
emacsclient --socket-name=weeb-emacsd -c
ps -x
ps -x | grep emacs
ps -x | grep runsv
ps -ax | grep runsv
sudo sv stop emacs
sudo sv stop emacs-daemon
sudo sv up emacs-daemon
/var/service/emacs-daemon/run
sh /var/service/emacs-daemon/run
kak /etc/sv/emacs-daemon/run
exec chpst -u "$USER:$groups" /usr/bin/emacs --fg-daemon=weeb-emacsd >/dev/null 2>&1\

exec chpst -u "$USER:$groups" /usr/bin/emacs --fg-daemon=weeb-emacsd
echo $USER
echo $usergroups
groups="$(id -Gn "$USER" | tr ' ' ':')"\

echo $groups
chpst -u "$USER:$groups" /usr/bin/emacs --fg-daemon=weeb-emacsd >/dev/null 2>&1
/usr/bin/emacs
where emacs
sudo kak /etc/sv/emacs-daemon/run
sudo sv status emacs-daemon
kak .config/awesome/evil/coronavirus.lua
kak .config/awesome/rc.lua
fc-list | grep -i "M+"
cd clones/tabbed-tanish2002
kak README.md
cd clones/st-tanish2002
git clone git://git.suckless.org/st
cd st
kak st.c
kak tabbed.c
rm -rf st
ls splash-images
rm -rf splash-images
xrs simple
xrs simple-scan
xi simple-scan
feh Documents/signature.jpg
feh Documents/photo.
feh Documents/photo.jpg
echo :ïƒ©©
printf ïƒ©©
echo \f269
echo \uf269
printf '\uf269'
echo "\xf269"
echo "\62057"
$HOME/.config/polybar/launch.sh\

xprop -root _NET_DESKTOP_NAMES | xclip -sel clip
ghc -i
ghc -I
ghc
man ghc
ghc --interactive
e
killall -KILL ghc
ghc print
ghc print "hello"
ghci
echo "\u1234"
echo "\u8080"
echo "\u9224"
echo "\u9234"
./mem
mkdir Config
kak Config/Unicode.hs
kak lib/Data/String/IsoLatinTables.hs
mkdir lib/Data/Char
kak lib/Data/Char/IsoLatinTables.hs
kak lib/Data/String/EncodingNames.hs
kak lib/Data/String/UTF8.hs
kak lib/Data/String/UTF8Decoding.hs
cabal install -p Data
rm -rf lib
cabal install -p Could not find module â€ƒ¸Data.String.Unicode
cabal install -p hxt-unicode
cabal install --lib hxt-unicode
cabal install --lib xmonad
echo "\uf269"
ghc -c q.hs
./q.o
rm q.hi q.o 
echo "\uf269" | xclip -selection clipboard
kak q.hs
./q
ghc q.hs
kak clones/dwm-tanish2002/config.h
kak .config/polybar/config
xrs lm_sensors
xi lm_sensors
xmonad-contrib --help
cabal install --overwrite-policy=always
xmonad --version
xmonad --help
sudo sv restart emacs-daemon
ls .cabal
ghc-pkg
ghc-pkg --help
ghc-pkg list
cabal 
cabal list
cabal list | grep -i "xmonad"
cabal check
cabal clean
cabal install cabal-uninstall
cabal-uninstall --help
cabal-uninstall xmonad
cabal-uninstall xmonad-contrib
cp .xmonad .xmonad_back
cabal
cabal --help
cabal-uninstall
cabal install https://github.com/xmonad/xmonad/archive/master.tar.gz
rm -rf xmonad xmonad-contrib 
git clone https://github.com/xmonad/xmonad.git
cd xmonad
git checkout release-0.13
git checkout master
sudo cabal-uninstall xmonad-contrib
sudo runhaskell Setup configure
runhaskell Setup configure
git clone https://github.com/xmonad/xmonad-contrib.git
cd xmonad-contrib
cabal install
cabal install --lib
rm -rf .cabal
rm -rf .ghc
cabal update && cabal install --lib xmonad xmonad-contrib
cabal install xmonad
sensors
ps -ax | grep
ps -ax | grep emacs
kak .config/zsh/zim_config.zsh
kak .oh-my-zsh/lib/completion.zsh
kak .oh-my-zsh/lib/key-bindings.zsh
kak .config/zsh/config/zim_config.zsh
zim build
zimfw clean
zimfw
zimfw install
zimfw build
zimfw upgrade
zimfw update
echo $ZDOTDIR
zinfw uninstall
zimfw uninstall
xrdb ~/xrdb/solid/solid 
xrdb -query
kak xrdb/solid/solid
kak xrdb/lake/lake
kak .doom.d/kak.el
fc-list | grep -i "fura"
kak .config/picom/picom.conf
xprop | grep "CLASS"
killall bar_small
doom sync
xrs haskell
kak .doom.d/init.el
moe screenshots/2020-08-08_03:14:39.png
feh 'https://i.fiery.me/G01E2.png'
moe screenshots/2020-08-08_03:16:06.png
feh 'https://i.fiery.me/nR4vo.png\
'
feh screenshots/2020-08-08_03:16:06.png
fc-list | grep -i "fur\
"
fc-list | grep -i "fura" | grep -i "sans"
fc-list | grep -i "fura" | grep -i "serif"
fc-list | grep -i "serif"
kak .xmonad/xmonad.hs
killall Discord
feh 'https://i.fiery.me/nR4vo.png'
s
mkdir Bus
rm .xmonad/xmonad.o .xmonad/xmonad.errors
ls .xmonad
rm xmonad.hi
cd Bus
rm ManageHook.hi ManageHook.o
rm xmonad1.hs xmonad_def.hs
ls .xmonad .xmonad_back 
rm .xmonad_back
rm -r .xmonad_back
cp -rf .xmonad .xmonad_back
rm xmonad.o xmonad.errors xmonad.hi
ls Bus
mkdir lib
git clone https://github.com/karetsu/xmonad-aloysius.git
kak aloysius.cabal
mkdir test
cd test
cabal init
kak test.cabal
mv aloysius.cabal xmonad-tanish2002.cabal
ls cabal.project.local 
cat cabal.project.local 
rm cabal.project.local
cabal configure --enable-optimisation --enable-library-stripping" >\\
      install.log
cabal configure --enable-optimisation --enable-library-stripping > install.log
xrs alsa
xrs alsa-lib
xi alsa-lib-devel
ls dist-newstyle
xi fd
fd -tf
rm Bus lib xmonad-x86_64-linux xmonad.errors xmonad.hi xmonad.hs xmonad.o 
rm -rf Bus lib xmonad-x86_64-linux xmonad.errors xmonad.hi xmonad.hs xmonad.o 
fd -tf 'xmonad' dist* -x
fd -tf 'xmonad' dist*
find . \( -name '*.hi'\\
        -or -name '*.o'\\
        -or -name '*.errors'\\
        -or -name '*.log'\\
        -or -name 'cabal.project.local*'\\
        \) -type f -delete
rm -rf ../.cabal
cabal update
rm xmonad-x86_64-linux
./xmonad-x86_64-linux
./xmonad-x86_64-linux --help
./xmonad-x86_64-linux --recompile
cd xmonad-aloysius
mkdir src/Config/
rm xmonad-x86_64-linux xmonad.errors
cd src/Bind
touch Alias.hs
xrs fd
xrs xsettings
cat ~/bin/autostart-xmonad
./xmonad-x86_64-linux --restart
cat xmonad.state
ls src
mkdir src/Bind
touch src/Bind/KeyBoard.hs
killall emacs
rm *
kak .xmonad_back/xmonad.hs
echo "      Expected type: [(String, X ())]\
        Actual type: [([Char],\
                       W.StackSet Int l0 a0 s0 sd0 -> W.StackSet Int l0 a0 s0 sd0)]\
    â€ƒ‚ In the expression:\
        concat\
          $ [[("M-" ++ show wspNum, W.greedyView wspNum),\
              ("M-S-" ++ show wspNum, W.shift wspNum)] |\
               wspNum <- [1 .. 9 :: Int]]\
      In an equation for â€ƒ¸workspaceBindingsâ€ƒ¹:\
          workspaceBindings\
            = concat\
                $ [[("M-" ++ show wspNum, W.greedyView wspNum),\
                    ("M-S-" ++ show wspNum, W.shift wspNum)] |\
                     wspNum <- [1 .. 9 :: Int]]\
      In an equation for â€ƒ¸keyboardâ€ƒ¹:\
          keyboard\
            = concat [customBindings, wmBindings, multimediaBindings, ....]\
            where\
                customBindings :: [(String, X ())]\
                customBindings = [("M-<Retrun>", spawn (term options)), ....]\
                wmBindings :: [(String, X ())]\
                wmBindings = [("M-S-q", kill), ....]\
                ....\
    |\
134 |     workspaceBindings = concat $\
    |                         ^^^^^^^^...\
"
moe test
0x0 'https://i.fiery.me/ALYgR\
'
mkdir src/Container
cabal build | 0x0
kak
0x0 src/Container/Layout.hs 
kak test
0x0 test
cd .xmonad_back
kak xmonad.hs
kak layout.hs
0x0 xmonad.hs
xrs image
xrs imagemagick
mv xmonad-aloysius xmonad-tanish2002
sudo ./build
ls ~/.local/bin
sudo clean
sudo zsh
rm test
rm LICENSE
kak cabal.project.local
kak xmonad-tanish2002.cabal
git clone git@gitlab.com:Tanish2002/xmonad-tanish2002.git
git commit -m "Added the build"
kak Bind/KeyBoard.hs
cd src
kak Apps/Alias.hs
kak Config/Options.hs
~/.config/polybar/launch.sh
killall polybar
ILOC=$HOME/.xmonad/xmonad-x86_64-linux
xinit .xmonad/xmonad-x86_64-linux
feh --bg-fill Wallpapers/solid.png
feh --help
kak clones/xmonad-tanish2002/src/xmonad.hs
cat ls
kak build
cat install.log
colorpanes
polybar bottom
cd .xmonad
rm src
rm -rf src
ls lib
kak lib/Bind/KeyBoard.hs
lsl
xmonad --recompile && xmonad --restart
picom --experimental-backends
picom
kak src/Config/Options.hs 
kak src/Apps/Alias.hs 
picom --config ~/.config/picom/picom.conf
where xmonad
mv .xmonad .xmonad_new
kak src/Bind/KeyBoard.hs
kak src/Config/Options.hs
pgrep
pgrep battery_warn
htop
kak src/Apps/Alias.hs
killall picom
xprop
xprop -root _NET_DESKTOP_NAMES
git commit -m "Fixed Spawn terminal Bind"
sudo shutdown -P now
iwconfig
feh --bg-fill Wallpapers/nier.png
history
kak .config/zsh/.zhistory
curl -L https://raw.githubusercontent.com/keroserene/rickrollrc/master/roll.sh | bash
curl -sL https://raw.githubusercontent.com/keroserene/rickrollrc/master/roll.sh | bash
color tab #F7A36E
hexblock #F7A36E
hexblock F7A36E
xrs
cd xmonad-tanish2002
kak src/xmonad.hs 
cd .xmonad_back/
kak xmonad.hs 
kak src/Hooks/EventHook.hs
kak src/Container/Layout.hs 
$HOME/.config/polybar/launch.sh
kak src/Hooks/ManageHook.hs
ls build
rm build
cabal configure --enable-optimisation --enable-library-stripping
cabal build
ILOC=/usr/local/bin/
sudo rm /usr/local/bin/xmonad
fd -tf 'xmonad' dist* -x mv -u {} $ILOC
sudo fd -tf 'xmonad' dist* -x mv -u {} $ILOC
git format-patch
git format-patch HEAD
git format-patch master
kak 0001-Fixed-Spawn-terminal-Bind.patch
rm 0001-Fixed-Spawn-terminal-Bind.patch
git diff > difff
kak difff
mv difff build
chmod +x build
ed README.org
sudo make clean
git checkout -b "virginfuhrer-master" "master"
git pull https://github.com/virginfuhrer/st-tanish2002.git "master"
git checkout "master"
git merge --no-ff "virginfuhrer-master"
git push origin "master"
kak README.org
git add README.org
git commit -m "More typo fixes"
cat 0001-More-typo-fixes.patch
rm 0001-More-typo-fixes.patch
l
git clone git@github.com:Tanish2002/st-tanish2002.git
cd st-tanish2002
git format-patch HEAD~1
set -- $(echo /var/db/xbps/.*)
echo $#
echo $100
echo $766
read -r version < /proc/version\
set -- $version\
kernel="${3%%-*}"
echo $version
echo $1
echo $2
echo $3
read -r _ _ version _ < /proc/version\
kernel="${version%%-*}"
echo $kernel
cat /proc/version
	for i in "$@"; do\
		var="${var:+$var|}*$i*"
echo pg
echo $pg
pg() {\
	unset ab var\
	# i hate myself for this\
	for i in "$@"; do\
		var="${var:+$var|}*$i*"\
	done\
	for i in /proc/[0-9]*; do\
		ab="$ab ${i##*/}"\
		read -r a < "$i"/comm\
		# this was sadly the better option...\
		eval "case \$a in\
			$var) echo \"\$a\" \"\${i##*/}\"; break;;\
		esac"\
	done\
}
v
if [ "$XDG_CURRENT_DESKTOP" ]; then\
	wm="$XDG_CURRENT_DESKTOP"\
elif [ "$DESKTOP_SESSION" ]; then\
	wm="$DESKTOP_SESSION"\
elif [ "$DISPLAY" ]; then\
	xorg="$(pg Xorg)"\
	xorg="${xorg##* }"\
	aa="$(pg wm monad box i3 tile)"\
	# make sure it was started near enough after the X server\
	[ "${aa##* }" -gt "$xorg" ] &&\
		[ "${aa##* }" -lt "$((xorg + 30))" ] &&\
		wm="${aa%% *}"\
fi\

echo $wm
echo $xorg
while read -r line; do\
	case $line in\
		MemTotal*) mem="${line##*: }"; break;;\
	esac\
done < /proc/meminfo\
mem="${mem##*  }"\
mem="${mem%% *}"\
\
mem="$(( mem / 1000 ))"\

while read -r line; do\
	case $line in\
		MemTotal*) mem="${line##*: }"; break;;\
	esac\
done < /proc/meminfo
mem="${mem##*  }"
mem="${mem%% *}"
echo $mem
mem() {\
    # Parse the '/proc/meminfo' file splitting on ':' and 'k'.\
    # The format of the file is 'key:   000kB' and an additional\
    # split is used on 'k' to filter out 'kB'.\
    while IFS=':k ' read -r key val _ ; do\
        case $key in\
            MemTotal|Shmem)\
                total=$((total + val))\
                used=$((used + val))\
                ;;\
            MemFree|Buffers|Cached|SReclaimable)\
                used=$((used - val))\
        esac\
    done </proc/meminfo\
\
    printf '%s/%s\n' \\
        "$(printf '%s\n' "$((used * 1024))"  | human)" \\
        "$(printf '%s\n' "$((total * 1024))" | human)"\
}
mem() {\
    # Parse the '/proc/meminfo' file splitting on ':' and 'k'.\
    # The format of the file is 'key:   000kB' and an additional\
    # split is used on 'k' to filter out 'kB'.\
    while IFS=':k ' read -r key val _ ; do\
        case $key in\
            MemTotal|Shmem)\
                total=$((total + val))\
        esac\
    done </proc/meminfo\
\
    printf '%s\n' "$(printf '%s\n' "$((total * 1024))" | human)"\
}
mem() {\
    # Parse the '/proc/meminfo' file splitting on ':' and 'k'.\
    # The format of the file is 'key:   000kB' and an additional\
    # split is used on 'k' to filter out 'kB'.\
    while IFS=':k ' read -r key val _ ; do\
        case $key in\
            MemTotal|Shmem)\
                total=$((total))\
        esac\
    done </proc/meminfo\
\
    printf '%s\n' "$(printf '%s\n' "$((total * 1024))" | human)"\
}
mme
mem() {\
    # Parse the '/proc/meminfo' file splitting on ':' and 'k'.\
    # The format of the file is 'key:   000kB' and an additional\
    # split is used on 'k' to filter out 'kB'.\
    while IFS=':k ' read -r key val _ ; do\
        case $key in\
            MemTotal)\
                total=$((total + val))\
        esac\
    done </proc/meminfo\
\
    printf '%s\n' "$(printf '%s\n' "$((total * 1024))" | human)"\
}
mem
while read -r line; do\
	case $line in\
		vendor_id*) vendor="${line##*: }";;\
		model\ name*) cpu="${line##*: }"; break;;\
	esac\
done < /proc/cpuinfo\
vendor="${vendor##*Authentic}"\
vendor="${vendor##*Genuine}"\
cpu="${cpu##*) }"\
cpu="${cpu%% @*}"\
cpu="${cpu%% CPU}"\
cpu="${cpu##CPU }"\
cpu="${cpu##*AMD }"\
cpu="${cpu%% with*}"\
cpu="${cpu% *-Core*}"
echo $cpu
echo $vendor
IFS=. read -r uptime _ < /proc/uptime\
d="$((uptime / 60 / 60 / 24))"\
h="$((uptime / 60 / 60 % 24))"\
m="$((uptime / 60 % 60))"
echo 
echo $d
echo $h
echo $m
cd .config/gtk-3.0
kak settings.ini
source settings.ini
echo $gtk-theme
echo $gtk-theme-name
cat settings.ini
gtk=$(cat settings.ini)
echo ${gtk##*name}
echo ${gtk##*name = }
echo ${gtk##*name =}
curl -s https://raw.githubusercontent.com/6gk/fet.sh/master/fet.sh
curl -s https://raw.githubusercontent.com/6gk/fet.sh/master/fet.sh | sh
while read -r line; do\
	case $line in\
		gtk-theme*) gtk="${line##*=}"; break;;\
	esac\
done < "${XDG_CONFIG_HOME:-$HOME/.config}"/gtk-3.0/settings.ini
while read -r line; do\
	case $line in\
		gtk-theme*) gtk="${line##*= }"; break;;\
	esac\
done < "${XDG_CONFIG_HOME:-$HOME/.config}"/gtk-3.0/settings.ini
echo $gtk
name=hello
name1
name1=world
name1="    world   "
name="   hello "
trim_all $name
name="   John   Black  is     my    name.    "\
 trim_all "$name"
trim_all() {\
    # Usage: trim_all "   example   string    "\
\
    # Disable globbing to make the word-splitting below safe.\
    set -f\
\
    # Set the argument list to the word-splitted string.\
    # This removes all leading/trailing white-space and reduces\
    # all instances of multiple spaces to a single ("  " -> " ").\
    set -- $*\
\
    # Print the argument list as a string.\
    printf '%s\n' "$*"\
\
    # Re-enable globbing.\
    set +f\
}
trim_string() {\
    # Usage: trim_string "   example   string    "\
\
    # Remove all leading white-space.\
    # '${1%%[![:space:]]*}': Strip everything but leading white-space.\
    # '${1#${XXX}}': Remove the white-space from the start of the string.\
    trim=${1#${1%%[\
\
    # Remove all trailing white-space.\
    # '${trim##*[![:space:]]}': Strip everything but trailing white-space.\
    # '${trim#${XXX}}': Remove the white-space from the end of the string.\
    trim=${trim%${trim##*[![:space:]]}}\
\
    printf '%s\n' "$trim"\
}
trim_string() {\
    # Usage: trim_string "   example   string    "\
\
    # Remove all leading white-space.\
    # '${1%%[![:space:]]*}': Strip everything but leading white-space.\
    # '${1#${XXX}}': Remove the white-space from the start of the string.\
    trim=${1#${1%%[\
\
    # Remove all trailing white-space.\
    # '${trim##*[![:space:]]}': Strip everything but trailing white-space.\
    # '${trim#${XXX}}': Remove the white-space from the end of the string.\
    trim=${trim%${trim##*[\
\
    printf '%s\n' "$trim"\
}
xrs shellcheck
git commit -m "Fix for leading/trailing white-space"
git commit -m "Fix for leading/trailing white-spaces"
git clone https://github.com/6gk/fet.sh.git
moe ~/screenshots/2020-08-10_20:38:26.png
feh 'https://i.fiery.me/UgG0l.png\
'
feh 'https://i.fiery.me/UgG0l.png'
moe ~/screenshots/2020-08-10_20:39:33.png
feh 'https://i.fiery.me/zLFb7.png'
git pull
./fet.sh_
cat fet.sh | xclip -sel clip
while [ ! "$term" ]; do\
	read -r name < "/proc/${ppid:=$$}/comm"\
	case $name in\
		*sh) ;;\
		"${0##*/}") ;;\
		*[Ll]ogin*|*init*) term=linux;;\
		*) term="$name";;\
	esac\
	o="$ppid"\
	ppid=$(ppid "$ppid")\
	[ "$o" = "$ppid" ] && break\
done
ps -o comm= -p
ps -o comm= -p "$(($(ps -o ppid= -p "$(())")))"
ps -o comm= -p "$(($(ps -o ppid= )))"
ps -o sid
ps -o sid =
ps -o sid= 
ps -o ppid= 
ps -o comm= -p "zsh"
ps -o comm= -p "1"
ps -o comm= -p "2"
ps -o comm= -p "3"
ps -o comm= -p "4"
ps -o comm= -p "5"
ps -o comm= -p "6"
ps -o comm= -p "1 2 3 4 5 6 7 8 9"
ps -o comm= -p "1 2 3 4 5 6 7 8 9 10"
sid=$(ps -o sid= -p "$$")\
sid_as_integer=$((sid)) # strips blanks if any\
session_leader_parent=$(ps -o ppid= -p "$sid_as_integer")\
session_leader_parent_as_integer=$((session_leader_parent))\
emulator=$(ps -o comm= -p "$session_leader_parent_as_integer")
echo $emulator
echo $sid
echo $sid_as_integer
echo $session_leader_parent
xwininfo
xwininfo -id $WINDOWID | awk '/^xwin/ { print $NF }'
xrs tmux
xi tmux
st &
rm fet.sh_
rr
git reset 026a307 --hard
cd ..
cd clones/
git commit -m "Reduced sloc :)"
echo ${0##*/}
fet.sh/fet.sh
;s
kak clones/fet.sh/fet.sh
kak ~/fet.sh/fet.sh
cat ~/clones/fet.sh/fet.sh | xclip -selection clipboard
kak ~/clones/fet.sh/fet.sh
~/clones/fet.sh/fet.sh
hello=hello
echo $hello
[ "$hello" = [Hh]ello*|*lol* ] && term=LOLLLLLLLL\

type printf
type echo
ps -o ppid comm=
ps -o ppid, comm
ps -o ppid
cat /proc/30781/status
cat /proc/30781/comm
ppid() {\
	while read -r line; do\
		case $line in\
			PPid*) echo "${line##*:?}"; break;;\
		esac\
	done < /proc/"$1"/status\
}
ppid zsh
ls /bin/echo
type ps
type -a ps
type -a bash
type -a print
type -a printf
type tail
readlink /proc/$$/exe
type readlink
	read -r name < "/proc/${ppid:=$$}/comm"\
	case $name in\
		*sh) ;;\
		"${0##*/}") ;;\
		*[Ll]ogin*|*init*) term=linux;;\
		*) term="$name";;\
	esac
cat /proc/$$/status | grep PPid
echo $ppid
ppid
cat /proc/31292
cat /proc/31292/status
ps -o sid= -p $$
ps -o comm= -p $$
ps
ps -a
ps -ax
ps -ax | grep st
ps -o ppid= -p $$
ps -o comm=
ps -o comm= -p "$(($(ps -o ppid= -p "$(($(ps -o sid= -p "$$")))")))"
ps -o comm= -p "30778"
man ps
ps -o comm= -p "$(($(ps -o ppid= -p "$$")))"
echo $(($(ps -o ppid= -p "$$")))
cat /proc/$$/status
cat /proc/7355/status
cat /proc/$$/comm
cat /proc/30778/comm
cat /proc/30778/status
cat /proc/30777/status
cat /proc/1/status
cat /proc/0/status
ls pfetch
where pfetch
kak bin/pfetch
pfetch
cat /proc/8899/comm
tabbed
sh
chmod +x term
	read -r name < "/proc/$PPID/comm"\

	case $name in\
		*sh) ;;\
		"${0##*/}") ;;\
		*[Ll]ogin*|*init*) term=linux;;\
		*) term="$name";;\
	esac\

echo $term
echo $ma,e
cat /proc/10992/comm
echo $name
tmux
term
xrdb -remove
xrdb ~/xrdb/lake/lake
stmessage st tabbbed
while IFS=':    ' read -r key val; do\
    case $key in\
        PPid)\
            ppid=$val\
            break\
        ;;\
    esac\
done < "/proc/${ppid:-$PPID}/status"\
\
read -r term < "/proc/$ppid/comm"
cat term | xclip -selection clip
bash -c "nvim term"
rm .term.kak.7
rm -rf .term.kak.7
xi alacritty
rm .config/alacritty
rm -rf .config/alacritty
curl -s 'http://0x0.st/i3dM.bin' | sh
word=zsh
[ $word = *sh ] && echo true || echo false
case $word in\
*sh) echo true ;;\
*) echo false ;;\
esac
cat /proc/$PPID/comm
ppid $$
ppid() {\
	while read -r line; do\
		case $line in\
			PPid*) echo "${line##*:?}"; break;;\
		esac\
	done < /proc/"$1"/status\
}\

ppid $PPID
cat /proc/$(ppid $PPID)/comm
colorpick
git clone https://github.com/dylanaraps/pfetch.git
cd pfetch
git checkout term
kak pfetch
./pfetch
bash
curl -s 'http://0x0.st/i3dp.bin'
kak fet.sh/fet.sh
pg() {\
	unset ab var\
	# i hate myself for this\
	for i in "$@"; do\
		var="${var:+$var|}*$i*"\
	done\
	for i in /proc/[0-9]*; do\
		ab="$ab ${i##*/}"\
		read -r a < "$i"/comm\
		# this was sadly the better option...\
		eval "case \$a in\
			$var) echo \"\$a\" \"\${i##*/}\"; break;;\
		esac"\
	done\
}\

pg
pg monad
pg xmonad
pg i3
echo $$
ps -o comm= 3958
ps -o comm= 3959
echo $PPID
ps -o comm= $$
ps -o comm= $PPID
zsh
rm record-2020.08.11-00:51:08.mp4
rm record-2020.08.11-00:51:33.mp4 
rm record-2020.08.11-00:51:55.mp4
record
st
curl -s http://0x0.st/i3dU.txt
curl -s http://0x0.st/i3dU.txt | xclip -sel clip
./term
cd clones
rm -rf fet.sh
git clone git@github.com:Tanish2002/fet.sh.git
cd fet.sh
git commit -m "Redid terminal detection"
./wm | grep monad
	for i in "$@"; do\
		var="${var:+$var|}*$i*"\
	done
	for i in "monad Xorg"; do\
		var="${var:+$var|}*$i*"\
	done
echo $var
0x0 term
moe term
ping google.com
kak term
cat term
cat term | 00
cat term | 0x0
curl -s 'http://0x0.st/i3nZ.bin'
curl -s 'http://0x0.st/i3nZ.bin' > wm
kak wm
rm wm
curl -s http://0x0.st/i3nq.bin > wm
chmod +x wm
./wm
kak clones/fet.sh
kak fet.sh
rm fet.sh
curl -s http://0x0.st/i3nq.bin > fet.sh
chmod +x fet.sh
git add .
git commit -m "Redid unknown wm(xmonad,qtile,etc) detection"
git push
git clone git://git.suckless.org/dwm
cd dwm
kak config.
kak config.def.h
cd clones/fet.sh
./fet.sh
cd clones/dwm-tanish2002
sudo make clean install
xinit dwm
xinit xmonad
echo $DISPLAY
ed
cd clones/xmonad-tanish2002
clean () {\
  printf "  ïƒ§¸ Cleaning\r"\
  find . \( -name '*.hi'\\
        -or -name '*.o'\\
        -or -name '*.errors'\\
        -or -name '*.log'\\
        -or -name 'cabal.project.local*'\\
        \) -type f -delete\
\
  rm -rf dist-newstyle/\
  rm -rf dist/\
\
  echo "  ï€ƒ´ Cleaned  "\
}
clean
kak src/xmonad.hs
kak clones/xmonad-tanish2002/src/Bind/KeyBoard.hs
kak clones/xmonad-tanish2002/src/Bind/Mouse.hs
kak clones/xmonad-tanish2002/src/Hooks/EventHook.hs
kak clones/xmonad-tanish2002/src/Hooks/LogHook.hs
kak clones/xmonad-tanish2002/src/Hooks/ManageHook.hs
kak clones/xmonad-tanish2002/src/Apps/Alias.hs
kak clones/xmonad-tanish2002/src/Config/Options.hs
kak clones/xmonad-tanish2002/src/Container/Layout.hs
./build
kak install.log
rm install.log
git diff
xmonad --restart
ps x
pstree x
pstree
pstree -x
pstree -l
pstree -a
pstree -a | grep Xorg
ps -o comm= 
ps -o comm= xorg
ps -o comm= Xorg
ps -o ppid= -p "Xorg"
ps -o ppid= Xorg
ps -o ppid= xorg
ls
man pstree
pstree -ag | grep Xorg
cat /proc/23998
cat /proc/23998/comm
cat /proc/23998/status
ps -o ppid= -p "$$"
ps -o comm= -p "$$"
ps -o comm= -p "23998"
pstree -ag | grep xmonad
ps -o comm= -p "24012"
cat /proc/24012/status
pstree -ag
cd
xmonad
startx xmonad
exit
type startx
type xinit
xinit xmonad
pstree -ag
curl http://0x0.st/i1oZ.bin
xrs pstree
uptime
~/clones/fet.sh/fet.sh
sudo shutdown -P now
xinit xmonad
$HOME/.config/polybar/launch.sh
cat bin/batterywarn
cat /sys/class/power_supply/BAT1/capacity
sudo shutdown -P now
xinit xmonad
for i in /proc/*/comm ; do\
echo $i\
done
for i in /proc/*/comm ; do\
cat $i\
done
cd .doom.d
ls
cd themes
ls
kak dip-theme.el
ed
cd
balls
feh --bg-fill Wallpapers/nier.png
balls
ls
ls .local/bin
randcolor 10
randcolor 10 | gradient
randcolor 10 | gradient 5
randcolor 2 | gradient 5
randcolor 2 | gradient 10
randcolor 2 | gradient 20
randcolor 2 | gradient 20 | hexblocks
kak bin/balls
balls
echo "\uF111"
export PS1='><> '
ls
echo $PS1
unset PS1
echo $PS1
export PS1='><> '
echo $PS1
ls
balls
ls
./term
./wm
ls
./wm
uptime
man uptime
cat /proc/uptime
ls
hotp
htop
s='ïƒ¤ƒ±'\
for i in {1..7}; do\
    printf ' \033[3%bm%s  \033[9%bm%s\n' "$i" "$s" "$i" "$s"\
done
s='ïƒ¤ƒ±'\
for i in {1..7}; do\
    printf ' \033[3%bm%s \033[9%bm%s \n' "$i" "$s" "$i" "$s"\
done
balls
s='ïƒ¤ƒ±'\
for i in {0..7}; do\
    printf ' \033[3%bm%s \033[9%bm%s \n' "$i" "$s" "$i" "$s"\
done
type una
type uname
for k v in ${(kv)fg_bold};\
echo "$v$k"
for k v in ${(kv)fg_bold};\
echo "$v$k"\
done
for k v in ${(kv)fg_bold}; do\
echo "$v$k"\
done
s
ls
record
mpv record-2020.08.11-23:32:54.mp4
git clone https://github.com/elkowar/phocus.git
git clone https://github.com/elkowar/gtk.git
rm -rf gtk
git clone https://github.com/elkowar/gtk.git
cd gtk
ls
kak scss/gtk-3.0/_colors.scss
mpv -q
mpvctl
mpvctl -q
mpvctl -Q
killall mpv
if {pgrep -u $UID -x polybar == /dev/null) {\
      polybar bar1\
      polybar bar2\
}
pgrep -x polybar
pgrep -x polybar || polybar
xrdb -remove
xrdb ~/xrdb/lake/lake
stmessage st tabbbed
blocks
balls
xrdb -remove
xrdb ~/xrdb/forest/forest
stmessage st tabbbed
balls
xrdb -remove
xrdb ~/xrdb/solid/solid
stmessage st tabbbed
ls
cp code /usr/local/bin
sudo curl -s https://gitlab.com/Tanish2002/dot-files/-/raw/master/bin/bin/balls > usr/local/bin/balls && chmod +x /usr/local/bin/balls
sudo curl -s https://gitlab.com/Tanish2002/dot-files/-/raw/master/bin/bin/balls > /usr/local/bin/balls && chmod +x /usr/local/bin/balls
sudo curl -s https://gitlab.com/Tanish2002/dot-files/-/raw/master/bin/bin/balls > /usr/local/bin/balls && sudo chmod +x /usr/local/bin/balls
sudo curl -s https://gitlab.com/Tanish2002/dot-files/-/raw/master/bin/bin/balls > /usr/local/bin/balls
ed
cd clones/xmonad-tanish2002
ls
./build
ed
./build
ed
./build
ed
xmonad --restart
balls
ls
echo $PS1
cd dot-files
ls
cd
cd clones/xmonad-tanish2002
ls
cd clones/xmonad-tanish2002
xrdb -remove
xrdb ~/xrdb/solid/solid
xrdb -remove
xrdb ~/xrdb/nier/nier 
stmessage st tabbbed
htop
uptime
fch
~/clones/fet.sh/fet.sh
killall -KILL ghc
killall -KILL firefox
killall Discord
xinit xmonad
kak .config/picom/picom.conf
kak dot-files/Dwm_solid/.config/picom/picom.conf
killall picom
bin/picom_anim
echo $PS1
htop
exa
ls
xrs exa
xi exa
exa
exa -lh
exa -lh --icons
exa --icons
exa
exa --icons
alias | grep ls
ll
l
alias | grep ls
type l
type ll
type ls
l
exa -lA
exa -a
exa -la
exa -lA
alias | rg
alias | rg "ls"
alias | grep ls
alias | grep grep
alias | rg --color=auto "ls"
rg
grep
xrs ls
xrs "ls "
xrs " ls "
xi ls++-git
xr -Ry ls++-git && xi -Sy lsd
lsd
exa --icons
xr -Ry lsd exa
xrs virtual
xrs vmware
ed
cd clones/xmonad-tanish2002
ls
clean () {\
  printf "  ïƒ§¸ Cleaning\r"\
  find . \( -name '*.hi'\\
        -or -name '*.o'\\
        -or -name '*.errors'\\
        -or -name '*.log'\\
        -or -name 'cabal.project.local*'\\
        \) -type f -delete\
\
  rm -rf dist-newstyle/\
  rm -rf dist/\
\
  echo "  ï€ƒ´ Cleaned  "\
}
clean
ls
git diff
ls
rr
xmonad --recompile && xmonad --restart
cd .xmonad
clean () {\
  printf "  ïƒ§¸ Cleaning\r"\
  find . \( -name '*.hi'\\
        -or -name '*.o'\\
        -or -name '*.errors'\\
        -or -name '*.log'\\
        -or -name 'cabal.project.local*'\\
        \) -type f -delete\
\
  rm -rf dist-newstyle/\
  rm -rf dist/\
\
  echo "  ï€ƒ´ Cleaned  "\
}
clean
ls
rr
kak dot-files/Bspwm_nier/.config/picom/picom.conf
kak .config/picom/picom.conf
kak dot-files/Bspwm_nier/.config/picom/picom.conf
shitfetch
ed
ls -A | wc -l
xrdb -remove
xrdb ~/xrdb/solid/solid
stmessage st tabbbed
ls
colorpanes
ls -A | wc -l
feh --bg-fill Wallpapers/lake.png
killall polybar
ls
man polybar
polybar --help
polybar top bottom
polybar -c dot-files/Bspwm_lake/.config/polybar/config white
polybar -c dot-files/Bspwm_lake/.config/polybar/config white &
xrdb -remove
xrdb ~/xrdb/lake/lake
stmessage st tabbbed
ed
colorpanes
kak .xmonad/lib/Bind/KeyBoard.hs
htop
killall Discord
killall firefox
xinit xmonad
killall polyba
killall polybar
feh --bg-fill Wallpapers/nier.png
$HOME/.config/polybar/launch.sh
htop
killall -KILL ghc
htop
killall -KILL emacs
htop
killall -KILL firefox
htop
killall picom
performance_mode
killall polybar
performance_mode
$HOME/.config/polybar/launch.sh
htop
xpkg 
xpkg | wc -l
killall Discord
where xmonad
sudo shutdown -P now
xinit xmonad
pipr
git clone https://github.com/elkowar/pipr
cargo build --release
cd pipr
cargo build --release
l
target/release/pipr
ls
xrs
xrs wmutil
$HOME/.config/polybar/launch.sh
iwconfig
$HOME/.config/polybar/launch.sh
xi wmutils-opt
cd
curl -s https://raw.githubusercontent.com/6gk/polka/master/bin/2bawm > 2bawm
chmod +x 2bawm
./2bawm
xi wmutils-core
./2bawm
killall picom

kak 2bawm
hexblocks 0D0D0F
0D0D0F
hexblocks 0D0D0F
hexblocks 7baae8
hexblocks c488ec
pfw
where pfw
type pfw
./2bawm
./2bawm &
killall -KILL 2bawm
./2bawm
cd dot-files
stow -D xmonad_solid
ls
./2bawm
curl -s https://raw.githubusercontent.com/6gk/polka/master/bin/2bawm > borders
chmod +x borders
./borders
bspc subscribe node_geometry node_focus
ls
rm borders
curl -s https://raw.githubusercontent.com/loki7990/Tranquility/master/.config/bspwm/borders > borders
chmod +x borders
./borders
killall picom
xrdb -remove
xrdb ~/xrdb/forest/forest
stmessage st tabbbed
: 1597270090:0;kak bin/Theme-change
: 1597270121:0;bswpmrc
: 1597270127:0;kak .config/bspwm/bspwmrc
: 1597270142:0;picom --config ~/.config/picom/picom.conf -b
: 1597270155:0;where picom
: 1597270163:0;killall picom
: 1597270178:0;$HOME/.config/bspwm/bspwmrc
: 1597270347:0;./borders
: 1597270668:0;echo hi |\
cat
: 1597270687:0;color
: 1597270696:0;rr
: 1597270744:0;kak bin/color
: 1597270756:0;type shift
: 1597270799:0;type dd
: 1597270896:0;echo $RANDOM
: 1597270909:0;while true; do\
echo $RANDOM\
done
: 1597271008:0;kak test
: 1597271020:0;rm test
: 1597271024:0;ls test
: 1597271030:0;rm -rf tes
: 1597271031:0;rm -rf test
: 1597271032:0;kak test
: 1597271053:0;chmod +x test
: 1597271056:0;./test
: 1597271111:0;type awk
: 1597271191:0;kak test
: 1597271213:0;./test
: 1597271294:0;random
: 1597271296:0;RANDOM=
: 1597271300:0;echo $RANDOM
: 1597271303:0;sh
: 1597271316:0;dash
: 1597271399:0;cat /dev/urandom | tr -dc '0-9' | fold -w 256 | head -n 1 | sed -e 's/^0*//' | head --bytes 3
: 1597271418:0;while true; do\
cat /dev/urandom | tr -dc '0-9' | fold -w 256 | head -n 1 | sed -e 's/^0*//' | head --bytes 3\
done
: 1597271434:0;while true; do\
cat /dev/urandom | tr -dc '0-9' | fold -w 256 | head -n 1 | sed -e 's/^0*//' | head --bytes 3\
echo\
done
: 1597271570:0;type date
: 1597271589:0;type tr
: 1597271627:0;date +%N
: 1597271633:0;man date
: 1597271647:0;type date
: 1597271707:0;kak bin/getn
: 1597271724:0;type eval
: 1597271786:0;echo $$ $PPID
: 1597271790:0;echo $$ $PPID | getn 1
: 1597271792:0;echo $$ $PPID | getn 2
: 1597271794:0;echo $$ $PPID | getn 3
: 1597271798:0;echo $$ $PPID | getn 1
: 1597271800:0;echo $$ $PPID | getn 2
: 1597271996:0;type date
: 1597271999:0;type eval
: 1597272313:0;_head () {\
    i=0\
    while read -r line && [ "$i" -lt "$1" ]; do\
        printf '%s\n' "$line"\
    done\
}
: 1597272449:0;_head () {\
    i=0\
    while read -r line && [ "$((i++))" -le "$1" ]; do\
        printf '%s\n' "$line"\
    done\
}
: 1597272452:0;head
: 1597272459:0;_heaf
: 1597272460:0;_head
: 1597272471:0;echo $$ $PPID | _head
: 1597272474:0;echo $$ $PPID | _head 2
: 1597272475:0;echo $$ $PPID | _head 1
: 1597272524:0;echo $$ $PPID | _head 2
: 1597272527:0;echo $$ $PPID | _head
: 1597272549:0;type head
: 1597272557:0;type _head
: 1597272570:0;reee () {\
    i=0\
    while read -r line && [ "$((i++))" -le "$1" ]; do\
        printf '%s\n' "$line"\
    done\
}
: 1597272572:0;reee
: 1597272578:0;echo $$ $PPID | reee
: 1597272581:0;echo $$ $PPID | reee 2
: 1597272582:0;echo $$ $PPID | reee 1
: 1597272596:0;reee () {\
    i=0\
    while read -r line && [ "$((i++))" -le "$1" ]; do\
        printf '%s\n' "$line"\
    done\
}
: 1597272598:0;reee
: 1597272601:0;echo $$ $PPID | reee 1
: 1597272602:0;echo $$ $PPID | reee 2
: 1597272613:0;echo "$$\n $PPID" | reee 2
: 1597272614:0;echo "$$\n $PPID" | reee 1
: 1597272621:0;echo "$$\n $PPID" | head -n1
: 1597272623:0;echo "$$\n $PPID" | head -n2
: 1597272625:0;echo "$$\n $PPID" | head -n3
: 1597272715:0;cksum
: 1597272721:0;type cksum 
: 1597272895:0;v
: 1597272897:0;only_num () {\
    while read -r line; do\
        while [ "$line" ]; do\
            char="${line%${line#?}}"\
            case $char in [0-9]) printf '%s\n' "$char"; esac\
            line=${char#?}\
        done\
    done\
}
: 1597272901:0;only_num
: 1597272952:0;_head () {\
    i=0\
    while read -r line && [ "$((i++))" -le "$1" ]; do\
        printf '%s\n' "$line"\
    done\
}
: 1597272955:0;only_num () {\
    while read -r line; do\
        while [ "$line" ]; do\
            char="${line%${line#?}}"\
            case $char in [0-9]) printf '%s\n' "$char"; esac\
            line=${char#?}\
        done\
    done\
}
: 1597272967:0;_head 1 < /dev/urandom
: 1597272971:0;_head 1 < /dev/urandom | only_num
: 1597272981:0;_head 1 < /dev/urandom
: 1597272984:0;_head 2 < /dev/urandom
: 1597272988:0;_head 100 < /dev/urandom
: 1597272992:0;_head 100 < /dev/urandom | only_num
: 1597272999:0;_head 100 < /dev/random | only_num
: 1597273012:0;_head 100 < /dev/urandom | only_num
: 1597273016:0;_head 1 < /dev/urandom | only_num
: 1597273097:0;_head 1000 < /dev/urandom | only_num
: 1597273108:0;kak bin/color
: 1597273120:0;_head 1000 < /dev/urandom | only_num
: 1597273127:0;rand () {\
    for i in `seq $(($1*3))`\
    do\
	od -An -N1 -i /dev/random\
    done\
}\

: 1597273128:0;rand
: 1597273146:0;rand () {\
    for i in `seq $((1*3))`\
    do\
	od -An -N1 -i /dev/random\
    done\
}\

: 1597273158:0;rand () {\
    for i in `seq 3`\
    do\
	od -An -N1 -i /dev/random\
    done\
}\

: 1597273161:0;rand
: 1597273199:0;only_num () {\
    while read -r line; do\
        while [ "$line" ]; do\
            char="${line%${line#?}}"\
            case $char in [0-9]) printf '%s%s%s\n' "$char$char$char"; esac\
            line=${char#?}\
        done\
    done\
}
: 1597273208:0;_head 1000 < /dev/urandom | only_num
: 1597273280:0;only_num () {\
    while read -r line; do\
        while [ "$line" ]; do\
            char="${line%${line#?}}"\
            case $char in [100-999]) printf '%s\n' "$char"; esac\
            line=${char#?}\
        done\
    done\
}
: 1597273285:0;_head 1000 < /dev/urandom | only_num
: 1597273304:0;only_num () {\
    while read -r line; do\
        while [ "$line" ]; do\
            char="${line%${line#?}}"\
            case $char in [100-999]) printf '%s' "$char"; esac\
            line=${char#?}\
        done\
    done\
}
: 1597273305:0;_head 1000 < /dev/urandom | only_num
: 1597273400:0;_head () {\
    i=0\
    while read -r line && [ "$i" -lt "$1" ]; do\
        printf '%s\n' "$line"\
    done\
}
: 1597273403:0;_head 1000 < /dev/urandom | only_num
: 1597273416:0;only_num () {\
    while read -r line; do\
        while [ "$line" ]; do\
            char="${line%${line#?}}"\
            case $char in [0-9]) printf '%s\n' "$char"; esac\
            line=${char#?}\
        done\
    done\
}
: 1597273422:0;_head 1000 < /dev/urandom | only_num
: 1597273426:0;_head 1 < /dev/urandom | only_num
: 1597273469:0;kak tesr
: 1597273472:0;kak test
: 1597273498:0;_head () {\
    i=0\
    while read -r line && [ "$i" -lt "$1" ]; do\
        : $(( i = i + 1 ))\
        printf '%s\n' "$line"\
    done\
}
: 1597273515:0;only_num () {\
    while read -r line; do\
        while [ "$line" ]; do\
            char="${line%${line#?}}"\
            case $char in [0-9]) printf '%s\n' "$char"; esac\
            line=${char#?}\
        done\
    done\
}
: 1597273521:0;_head 1 < /dev/urandom | only_num
: 1597273527:0;_head 100 < /dev/urandom | only_num
: 1597273532:0;_head 1000 < /dev/urandom | only_num
: 1597273596:0;_head () {\
    i=0\
    while read -r line && [ "$i" -lt "$1" ]; do\
        : $(( i = i + 1 ))\
        printf '%s\n' "$line"\
    done\
}
: 1597273601:0;cat /dev/urandom | tr -dc '0-9' | fold -w 256 | head -n 1 | sed -e 's/^0*//' | head --bytes 3
: 1597273607:0;cat /dev/urandom
: 1597273618:0;_head () {\
    i=0\
    while read -r line && [ "$i" -lt "$1" ]; do\
        : $(( i = i + 1 ))\
        printf '%s\n' "$line"\
    done\
}
: 1597273648:0;_head 1000 < /dev/urandom
: 1597273663:0;_head 1000 < /dev/random
: 1597273667:0;_head 1000 < /dev/urandom
: 1597273671:0;_head 1000 < /dev/urandom | only_num 1
: 1597273675:0;_head 1000 < /dev/urandom | only_num
: 1597273701:0;only_num () {\
    while read -r line; do\
        while [ "$line" ]; do\
            char="${line%${line#?}}"\
            case $char in [100-999]) printf '%s\n' "$char"; esac\
            line=${char#?}\
        done\
    done\
}
: 1597273706:0;_head 1000 < /dev/urandom | only_num
: 1597273751:0;only_num () {\
    while read -r line; do\
        while [ "$line" ]; do\
            char="${line%${line#?}}"\
            case $char in [100-999]) printf '%s\n' "$char"; esac\
            line=${char#?}\
        done\
    done\
}
: 1597273802:0;kak bin/color
: 1597273826:0;	od -An -N1 -i /dev/random\

: 1597273845:0;type seq
: 1597273848:0;rand () {\
    for i in `seq $(($1*3))`\
    do\
	od -An -N1 -i /dev/random\
    done\
}\

: 1597273849:0;rand
: 1597273856:0;rand () {\
    for i in `seq $((1*3))`\
    do\
	od -An -N1 -i /dev/random\
    done\
}\

: 1597273858:0;rand
: 1597273891:0;rand 2
: 1597273893:0;rand 3
: 1597273899:0;rand () {\
    for i in `seq $(($1*3))`\
    do\
	od -An -N1 -i /dev/random\
    done\
}\

: 1597273901:0;rand 2
: 1597273902:0;rand 3
: 1597273903:0;rand 1
: 1597273922:0;rand 1 | rgb2hex
: 1597273930:0;rand 1
: 1597273958:0;echo "0\n 20\n 141\n"
: 1597273964:0;echo "0\n20\n141\n"
: 1597273974:0;echo "0\n20\n141\n" | rgb2hex
: 1597273982:0;echo "0\n20\n141\n" | rgb2hex | hexblocks
: 1597274013:0;_head 1000 < /dev/urandom | only_num
: 1597274022:0;_head 100 < /dev/urandom | only_num
: 1597274034:0;echo $((_head 100 < /dev/urandom | only_num%%20))
: 1597274064:0;tr -dc 1-9 < /dev/urandom | dd ibs=1 obs=1 count=5 2>/dev/null
: 1597274092:0;only_num () {\
    while read -r line; do\
        while [ "$line" ]; do\
            char="${line%${line#?}}"\
            case $char in [0-9]) printf '%s' "$char"; esac\
            line=${char#?}\
        done\
    done\
}
: 1597274094:0;_head 100 < /dev/urandom | only_num
: 1597274111:0;r=(_head 100 < /dev/urandom | only_num)
: 1597274117:0;r=$(_head 100 < /dev/urandom | only_num)
: 1597274119:0;echo $r
: 1597274146:0;echo $((r %% 255))
: 1597274155:0;r=$((r % 255))\
		printf '%s\n' "$r"
: 1597274163:0;r=$(_head 100 < /dev/urandom | only_num)
: 1597274166:0;r=$((r % 255))\
		printf '%s\n' "$r"
: 1597274180:0;r=$(_head 100 < /dev/urandom | only_num)
: 1597274186:0;r=$((r % 255))\
		printf '%s\n' "$r"
: 1597274191:0;_head 100 < /dev/urandom | only_num
: 1597274194:0;tr -dc 1-9 < /dev/urandom | dd ibs=1 obs=1 count=5 2>/dev/null
: 1597274208:0;_head 100 < /dev/urandom | only_num
: 1597274328:0;rand() {\
	i=$1\
	while [ "$i" -gt 0 ]; do\
		r=$(_head 1000 < /dev/urandom | only_num)\
		r=$((r % 255))\
		printf '%s\n' "$r"\
		i=$((i-1))\
	done\
}
: 1597274334:0;rand 1
: 1597274349:0;rand() {\
	i=$1\
	while [ "$i" -gt 0 ]; do\
		r=$(_head 100 < /dev/urandom | only_num)\
		r=$((r % 255))\
		printf '%s\n' "$r"\
		i=$((i-1))\
	done\
}
: 1597274351:0;rand 1
: 1597274373:0;while true; do\
rand 1\
done
: 1597274422:0;ed bin/color
: 1597274481:0;color rand
: 1597274482:0;color rand 2
: 1597274569:0;only_num () {\
    while read -r line; do\
        while [ "$line" ]; do\
            char="${line%${line#?}}"\
            case $char in [0-9]) printf '%s' "$char"; esac\
            line=${char#?}\
        done\
    done\
}
: 1597274572:0;_head 100 < /dev/urandom | only_num
: 1597274578:0;_head () {\
    i=0\
    while read -r line && [ "$i" -lt "$1" ]; do\
        : $(( i = i + 1 ))\
        printf '%s\n' "$line"\
    done\
}
: 1597274581:0;rand() {\
    i=$1\
    while [ "$i" -gt 0 ]; do\
        r=$(_head 100 < /dev/urandom | only_num)\
        r=$((r % 255))\
        printf '%s\n' "$r"\
        i=$((i-1))\
    done\
}
: 1597274585:0;rand 2
: 1597274586:0;rand 3
: 1597274591:0;rand 4
: 1597274593:0;rand 5
: 1597274595:0;rand 2
: 1597274625:0;rand() {\
    i=$(($1*3))\
    while [ "$i" -gt 0 ]; do\
        r=$(_head 100 < /dev/urandom | only_num)\
        r=$((r % 255))\
        printf '%s\n' "$r"\
        i=$((i-1))\
    done\
}
: 1597274628:0;rand 1
: 1597274629:0;rand 3
: 1597274634:0;rand 3 | hexblocks
: 1597274653:0;rand 3 | color tab
: 1597274664:0;rand 3
: 1597274672:0;rand 3 | color tab
: 1597274689:0;rand 3
: 1597274696:0;echo "233\
143\
175\
180\
9\
54\
243\
192\
37"
: 1597274705:0;echo "233\
143\
175\
180\
9\
54\
243\
192\
37" | color tab
: 1597274716:0;rand 1 | rgb2hex
: 1597274721:0;rand 1 | color tab
: 1597274729:0;rand 1 | hexblocks
: 1597274741:0;randcolor 1
: 1597274759:0;rand() {\
	i=$1\
	while [ "$i" -gt 0 ]; do\
		r=$(tr -dc 1-9 < /dev/urandom | dd ibs=1 obs=1 count=5 2>/dev/null)\
		r=$((r % 255))\
		printf '%s\n' "$r"\
		i=$((i-1))\
	done\
}\
\
count=${1:-1}\
count=$((count * 3))
: 1597274768:0;rand 1
: 1597274770:0;rand 2
: 1597274773:0;rand 3
: 1597274782:0;rand() {\
    i=$(($1*3))\
    while [ "$i" -gt 0 ]; do\
        r=$(_head 100 < /dev/urandom | only_num)\
        r=$((r % 255))\
        printf '%s\n' "$r"\
        i=$((i-1))\
    done\
}
: 1597274784:0;rand 1
: 1597274793:0;rand 1 | hexblocks
: 1597274815:0;rand() {\
	i=$1\
	while [ "$i" -gt 0 ]; do\
		r=$(tr -dc 1-9 < /dev/urandom | dd ibs=1 obs=1 count=5 2>/dev/null)\
		r=$((r % 255))\
		printf '%s\n' "$r"\
		i=$((i-1))\
	done\
}
: 1597274816:0;rand 1
: 1597274818:0;rand 3
: 1597274820:0;rand 3 | color tab
: 1597274826:0;rand 3 | hexblocks
: 1597274836:0;rand 3 | rgb2hex
: 1597274839:0;rand 3 | rgb2hex | hexblocks
: 1597274854:0;rand() {\
    i=$1\
    while [ "$i" -gt 0 ]; do\
        r=$(_head 100 < /dev/urandom | only_num)\
        r=$((r % 255))\
        printf '%s\n' "$r"\
        i=$((i-1))\
    done\
}
: 1597274856:0;rand 3
: 1597274859:0;rand 3 | rgb2hex | hexblocks
: 1597274897:0;color rand 2
: 1597274960:0;kak test
: 1597274986:0;./test
: 1597274988:0;kak test
: 1597275005:0;./test 1
: 1597275007:0;./test 2
: 1597275008:0;./test 3
: 1597275016:0;./test 2
: 1597275020:0;./test 5
: 1597275027:0;./test 3
: 1597275046:0;./test 3 | hexblocks
: 1597275054:0;./test 3 | rgb2hex | hexblocks
: 1597275120:0;_head 100 < /dev/urandom | only_num
: 1597275127:0;_head () {\
    i=0\
    while read -r line && [ "$i" -lt "$1" ]; do\
        : $(( i = i + 1 ))\
        printf '%s\n' "$line"\
    done\
}
: 1597275130:0;only_num () {\
    while read -r line; do\
        while [ "$line" ]; do\
            char="${line%${line#?}}"\
            case $char in [0-9]) printf '%s' "$char"; esac\
            line=${char#?}\
        done\
    done\
}
: 1597275132:0;_head 100 < /dev/urandom | only_num
: 1597275159:0;echo $(($(_head 100 < /dev/urandom | only_num) %% 255))
: 1597275173:0;r=$(_head 100 < /dev/urandom | only_num)
: 1597275178:0;echo $((r %% 255))
: 1597275187:0;r=$(_head 100 < /dev/urandom | only_num)
: 1597275188:0;echo $((r %% 255))
: 1597275193:0;echo $r
: 1597275196:0;echo $((r %% 255))
: 1597275200:0;echo $((r % 255))
: 1597275212:0;echo $(($(_head 100 < /dev/urandom | only_num) % 255))
: 1597275252:0;color rand 
: 1597275254:0;color rand
: 1597275266:0;color rand | hexblocks
: 1597275383:0;set --
: 1597275387:0;echo $1
: 1597275393:0;1=hello
: 1597275394:0;echo $1
: 1597275395:0;set --
: 1597275396:0;echo $1
: 1597275440:0;color rand | hexblocks
: 1597275448:0;color rand 2 | hexblocks
: 1597275453:0;color rand 3 | hexblocks
: 1597275550:0;color rand 3
: 1597275573:0;color rand 1
: 1597275575:0;color rand 3
: 1597275579:0;color rand 6
: 1597275582:0;color rand 9
: 1597275591:0;color rand 9 | hexblocks
: 1597275639:0;color rand | hexblocks
: 1597275694:0;rand 1
: 1597275697:0;rand 3
: 1597275727:0;rand() {\
    i=$1\
    while [ "$i" -gt 0 ]; do\
        r=$(_head 100 < /dev/urandom | only_num)\
        r=$((r % 255))\
        printf '%s\n' "$r"\
        i=$((i-1))\
    done\
}
: 1597275731:0;rand 
: 1597275732:0;rand 1
: 1597275733:0;rand 3
: 1597275735:0;rand 
: 1597275737:0;rand 3
: 1597275746:0;rand() {\
    i=$1\
    while [ "$i" -gt 0 ]; do\
        r=$(_head 100 < /dev/urandom | only_num)\
        r=$((r % 255))\
        printf '%s\n' "$r"\
        i=$((i-1))\
    done\
}
: 1597275762:0;rand 3
: 1597275769:0;rand $((1*3))
: 1597275776:0;color rand | hexblocks
: 1597275781:0;color rand 3 | hexblocks
: 1597275786:0;color rand 4 | hexblocks
: 1597275823:0;rand 4
: 1597275830:0;rand 4 | rgb2hex
: 1597275839:0;rand 3 | rgb2hex
: 1597275844:0;rand 3
: 1597275851:0;rand 9 | rgb2hex
: 1597275875:0;r=09
: 1597275884:0;echo $((r % 255))
: 1597275891:0;echo $r
: 1597275893:0;echo $((r % 255))
: 1597275898:0;r=31239812379123
: 1597275899:0;echo $((r % 255))
: 1597275908:0;r=3123981237912321312568790128376521879301287536213879012387561287931287652138791203182
: 1597275909:0;echo $((r % 255))
: 1597275917:0;r=3123981237912321312568790128376521879301287536213879012387561287931287652
: 1597275918:0;echo $((r % 255))
: 1597275923:0;r=3123981237912321312568790128376521879301287536213879012387
: 1597275924:0;echo $((r % 255))
: 1597275927:0;r=31239812379123213125687901283765218793012
: 1597275928:0;echo $((r % 255))
: 1597275931:0;r=3123981237912321312568790128
: 1597275932:0;echo $((r % 255))
: 1597275934:0;r=31239812379123213
: 1597275935:0;echo $((r % 255))
: 1597275938:0;r=312398123791232132312
: 1597275939:0;echo $((r % 255))
: 1597275940:0;r=3123981237912321323
: 1597275941:0;echo $((r % 255))
: 1597275943:0;r=31239812379123213232
: 1597275944:0;echo $((r % 255))
: 1597275946:0;r=3123981237912321323
: 1597275946:0;echo $((r % 255))
: 1597275959:0;color rand 4 | hexblocks
: 1597275977:0;pipr
: 1597275981:0;target/release/pipr
: 1597276067:0;color rand 4 | hexblocks
: 1597276093:0;color rand 4 | gradient 5
: 1597276106:0;color rand 2 | gradient 5
: 1597276111:0;color rand 2 | gradient 5 | hexblocks
: 1597276116:0;color rand 2 | gradient 10 | hexblocks
: 1597276133:0;randcolor 2 | gradient 10 | hexblocks
: 1597276139:0;color rand 2 | gradient 10 | hexblocks
: 1597276164:0;man od
: 1597276212:0;color rand 2 | gradient 10 | hexblocks
: 1597276274:0;randcolor 2 | gradient 10 | hexblocks
: 1597276292:0;while true; do\
randcolor 2 | gradient 10 | hexblocks\
done
: 1597276307:0;while true; do\
color rand 2 | gradient 10 | hexblocks\
done
: 1597276342:0;ls
: 1597276358:0;od -An -N1 -i /dev/random
: 1597276363:0;man od
: 1597276517:0;rand 100 < /dev/urandom
: 1597276569:0;rand 100
: 1597276574:0;rand 1
: 1597276603:0;kak clones/fet.sh/fet.sh
: 1597276627:0;rand 
: 1597276629:0;rand 1
: 1597276631:0;rand 100
: 1597276635:0;rand 100000
: 1597276717:0;rand
: 1597276718:0;rand 1
: 1597276720:0;rand 100
: 1597276725:0;rand 1000
: 1597276757:0;rand 10
: 1597276759:0;rand 100
: 1597276966:0;rand () {\
    i=0\
    while read -r line && [ "$i" -lt "$1" ]; do\
        : $(( i = i + 1 ))\
        while [ "$line" ]; do\
            char="${line%${line#?}}"\
            case $char in [0-9]) r=$(printf '%s' "$char"); esac\
            line=${char#?}\
        done\
        r=$((r % 255))\
        printf '%s' "$r"\
    done < "/dev/urandom"\
}
: 1597276968:0;rand
: 1597276970:0;rand 1
: 1597276972:0;rand 2
: 1597276973:0;rand 3
: 1597276975:0;rand 4
: 1597276976:0;rand 5
: 1597276978:0;rand 100
: 1597276981:0;rand 1000
: 1597277009:0;rand () {\
    i=0\
    while read -r line && [ "$i" -lt "$1" ]; do\
        : $(( i = i + 1 ))\
        while [ "$line" ]; do\
            char="${line%${line#?}}"\
            case $char in [0-9]) printf '%s' "$char"; esac\
            line=${char#?}\
        done\
    done < "/dev/urandom"\
}
: 1597277011:0;rand
: 1597277013:0;rand 100
: 1597277014:0;rand 1000
: 1597277016:0;rand 100
: 1597277033:0;echo $(($(rand 100) % 255))
: 1597277063:0;for i in `seq 3`;do echo $(($(rand 100) % 255)); done
: 1597277071:0;for i in `seq 3`;do echo $(($(rand 100) % 255)); done | rgb2hex
: 1597277111:0;echo 210000 | hex2rgb
: 1597277122:0;echo 33 0 0 
: 1597277127:0;echo 33 0 0 | rgb2hex
: 1597277185:0;kak bin/Theme-change
: 1597277205:0;kak bin/generate
: 1597277213:0;kak bin/shades
: 1597277224:0;kak dot-files/WIP/test
: 1597277339:0;rand () {\
    i=0\
    while read -r line && [ "$i" -lt "$1" ]; do\
        : $(( i = i + 1 ))\
        while [ "$line" ]; do\
            char="${line%${line#?}}"\
            case $char in [0-9])\
                              r=$(printf '%s' "$char")\
                              r=$((r % 255))\
                              printf '%s\n' "$r"\
            esac\
            line=${char#?}\
        done\
    done < "/dev/urandom"\
}
: 1597277342:0;rand 1
: 1597277344:0;rand 100
: 1597277350:0;rand 1000
: 1597277397:0;rand () {\
    i=0\
    while read -r line && [ "$i" -lt "$1" ]; do\
        : $(( i = i + 1 ))\
        while [ "$line" ]; do\
            char="${line%${line#?}}"\
            case $char in [0-9999999999999999999])\
                              r=$(printf '%s' "$char")\
                              r=$((r % 255))\
                              printf '%s\n' "$r"\
            esac\
            line=${char#?}\
        done\
    done < "/dev/urandom"\
}
: 1597277400:0;rand 2
: 1597277401:0;rand 3
: 1597277404:0;rand 1000
: 1597277429:0;rand () {\
    i=0\
    while read -r line && [ "$i" -lt "$1" ]; do\
        : $(( i = i + 1 ))\
        while [ "$line" ]; do\
            char="${line%${line#?}}"\
            case $char in [0-9]) printf '%s' "$char"; esac\
            line=${char#?}\
        done\
    done < "/dev/urandom"\
\
}
: 1597277432:0;rand 100
: 1597277458:0;echo $(( 0 % 255))
: 1597277462:0;echo $(( -0 % 255))
: 1597277465:0;echo $(( -1 % 255))
: 1597277469:0;echo $(( 0 % 255))
: 1597277474:0;echo $(( 1231 % 255))
: 1597277478:0;echo $(( 255 % 255))
: 1597277482:0;echo $(( 0 % 255))
: 1597277485:0;echo $(( 1 % 255))
: 1597277489:0;echo $(( w % 255))
: 1597277493:0;echo $(( wqd% 255))
: 1597277505:0;rand 100
: 1597277520:0;while true; do\
rand 100\
done
: 1597277565:0;while true; do\
r=$(rand 100)\
r=$((r % 255))\
echo $r\
done
: 1597277581:0;while true; do\
r=$(rand 100)\
r=$((r % 255))\
echo $r | rgb2hex\
done
: 1597277591:0;\
r=$(rand 100)\
r=$((r % 255))\
echo $r | rgb2hex
: 1597277600:0;\
r=$(rand 100)\
r=$((r % 255))\
echo $r
: 1597277610:0;echo 119 $r
: 1597277617:0;echo 119 | rgb2hex
: 1597277635:0;while true; do\
r=$(rand 100)\
r=$((r % 255))\
echo $r*3 | rgb2hex\
done
: 1597277643:0;while true; do\
r=$(rand 100)\
r=$((r % 255))\
echo $((r*3)) | rgb2hex\
done
: 1597277652:0;while true; do\
r=$(rand 100)\
r=$((r % 255))\
echo $((r*3))\
done
: 1597277844:0;cd dot-files
: 1597277847:0;ls
: 1597277849:0;git diff
: 1597277885:0;ls
: 1597277886:0;s
: 1597277899:0;stow -D Bspwm_forest
